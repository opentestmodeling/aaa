/*
 * generated by Xtext 2.15.0
 */
grammar InternalNgt;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.opentestmodeling.vstep.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.opentestmodeling.vstep.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.opentestmodeling.vstep.services.NgtGrammarAccess;

}
@parser::members {
	private NgtGrammarAccess grammarAccess;

	public void setGrammarAccess(NgtGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleModel
entryRuleModel
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getModelAccess().getGroup()); }
		(rule__Model__Group__0)
		{ after(grammarAccess.getModelAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTopLevelImport
entryRuleTopLevelImport
:
{ before(grammarAccess.getTopLevelImportRule()); }
	 ruleTopLevelImport
{ after(grammarAccess.getTopLevelImportRule()); } 
	 EOF 
;

// Rule TopLevelImport
ruleTopLevelImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTopLevelImportAccess().getGroup()); }
		(rule__TopLevelImport__Group__0)
		{ after(grammarAccess.getTopLevelImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTestNode
entryRuleTestNode
:
{ before(grammarAccess.getTestNodeRule()); }
	 ruleTestNode
{ after(grammarAccess.getTestNodeRule()); } 
	 EOF 
;

// Rule TestNode
ruleTestNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTestNodeAccess().getAlternatives()); }
		(rule__TestNode__Alternatives)
		{ after(grammarAccess.getTestNodeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTestTarget
entryRuleTestTarget
:
{ before(grammarAccess.getTestTargetRule()); }
	 ruleTestTarget
{ after(grammarAccess.getTestTargetRule()); } 
	 EOF 
;

// Rule TestTarget
ruleTestTarget 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTestTargetAccess().getGroup()); }
		(rule__TestTarget__Group__0)
		{ after(grammarAccess.getTestTargetAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTestViewpoint
entryRuleTestViewpoint
:
{ before(grammarAccess.getTestViewpointRule()); }
	 ruleTestViewpoint
{ after(grammarAccess.getTestViewpointRule()); } 
	 EOF 
;

// Rule TestViewpoint
ruleTestViewpoint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTestViewpointAccess().getGroup()); }
		(rule__TestViewpoint__Group__0)
		{ after(grammarAccess.getTestViewpointAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeConnection
entryRuleNodeConnection
:
{ before(grammarAccess.getNodeConnectionRule()); }
	 ruleNodeConnection
{ after(grammarAccess.getNodeConnectionRule()); } 
	 EOF 
;

// Rule NodeConnection
ruleNodeConnection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeConnectionAccess().getAlternatives()); }
		(rule__NodeConnection__Alternatives)
		{ after(grammarAccess.getNodeConnectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInheritance
entryRuleInheritance
:
{ before(grammarAccess.getInheritanceRule()); }
	 ruleInheritance
{ after(grammarAccess.getInheritanceRule()); } 
	 EOF 
;

// Rule Inheritance
ruleInheritance 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInheritanceAccess().getGroup()); }
		(rule__Inheritance__Group__0)
		{ after(grammarAccess.getInheritanceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelation
entryRuleRelation
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationAccess().getGroup()); }
		(rule__Relation__Group__0)
		{ after(grammarAccess.getRelationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDependency
entryRuleDependency
:
{ before(grammarAccess.getDependencyRule()); }
	 ruleDependency
{ after(grammarAccess.getDependencyRule()); } 
	 EOF 
;

// Rule Dependency
ruleDependency 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDependencyAccess().getGroup()); }
		(rule__Dependency__Group__0)
		{ after(grammarAccess.getDependencyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChain
entryRuleChain
:
{ before(grammarAccess.getChainRule()); }
	 ruleChain
{ after(grammarAccess.getChainRule()); } 
	 EOF 
;

// Rule Chain
ruleChain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChainAccess().getAlternatives()); }
		(rule__Chain__Alternatives)
		{ after(grammarAccess.getChainAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTargetChain
entryRuleTargetChain
:
{ before(grammarAccess.getTargetChainRule()); }
	 ruleTargetChain
{ after(grammarAccess.getTargetChainRule()); } 
	 EOF 
;

// Rule TargetChain
ruleTargetChain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTargetChainAccess().getGroup()); }
		(rule__TargetChain__Group__0)
		{ after(grammarAccess.getTargetChainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNodeChain
entryRuleNodeChain
:
{ before(grammarAccess.getNodeChainRule()); }
	 ruleNodeChain
{ after(grammarAccess.getNodeChainRule()); } 
	 EOF 
;

// Rule NodeChain
ruleNodeChain 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNodeChainAccess().getGroup()); }
		(rule__NodeChain__Group__0)
		{ after(grammarAccess.getNodeChainAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringList
entryRuleStringList
:
{ before(grammarAccess.getStringListRule()); }
	 ruleStringList
{ after(grammarAccess.getStringListRule()); } 
	 EOF 
;

// Rule StringList
ruleStringList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringListAccess().getGroup()); }
		(rule__StringList__Group__0)
		{ after(grammarAccess.getStringListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualityRisk
entryRuleQualityRisk
:
{ before(grammarAccess.getQualityRiskRule()); }
	 ruleQualityRisk
{ after(grammarAccess.getQualityRiskRule()); } 
	 EOF 
;

// Rule QualityRisk
ruleQualityRisk 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualityRiskAccess().getGroup()); }
		(rule__QualityRisk__Group__0)
		{ after(grammarAccess.getQualityRiskAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTestContainer
entryRuleTestContainer
:
{ before(grammarAccess.getTestContainerRule()); }
	 ruleTestContainer
{ after(grammarAccess.getTestContainerRule()); } 
	 EOF 
;

// Rule TestContainer
ruleTestContainer 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTestContainerAccess().getGroup()); }
		(rule__TestContainer__Group__0)
		{ after(grammarAccess.getTestContainerAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataPackage
entryRuleDataPackage
:
{ before(grammarAccess.getDataPackageRule()); }
	 ruleDataPackage
{ after(grammarAccess.getDataPackageRule()); } 
	 EOF 
;

// Rule DataPackage
ruleDataPackage 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataPackageAccess().getGroup()); }
		(rule__DataPackage__Group__0)
		{ after(grammarAccess.getDataPackageAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataElement
entryRuleDataElement
:
{ before(grammarAccess.getDataElementRule()); }
	 ruleDataElement
{ after(grammarAccess.getDataElementRule()); } 
	 EOF 
;

// Rule DataElement
ruleDataElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataElementAccess().getAlternatives()); }
		(rule__DataElement__Alternatives)
		{ after(grammarAccess.getDataElementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeImport
entryRuleTypeImport
:
{ before(grammarAccess.getTypeImportRule()); }
	 ruleTypeImport
{ after(grammarAccess.getTypeImportRule()); } 
	 EOF 
;

// Rule TypeImport
ruleTypeImport 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeImportAccess().getGroup()); }
		(rule__TypeImport__Group__0)
		{ after(grammarAccess.getTypeImportAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeDef
entryRuleTypeDef
:
{ before(grammarAccess.getTypeDefRule()); }
	 ruleTypeDef
{ after(grammarAccess.getTypeDefRule()); } 
	 EOF 
;

// Rule TypeDef
ruleTypeDef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeDefAccess().getGroup()); }
		(rule__TypeDef__Group__0)
		{ after(grammarAccess.getTypeDefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTypeInterface
entryRuleTypeInterface
:
{ before(grammarAccess.getTypeInterfaceRule()); }
	 ruleTypeInterface
{ after(grammarAccess.getTypeInterfaceRule()); } 
	 EOF 
;

// Rule TypeInterface
ruleTypeInterface 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeInterfaceAccess().getGroup()); }
		(rule__TypeInterface__Group__0)
		{ after(grammarAccess.getTypeInterfaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataBinding
entryRuleDataBinding
:
{ before(grammarAccess.getDataBindingRule()); }
	 ruleDataBinding
{ after(grammarAccess.getDataBindingRule()); } 
	 EOF 
;

// Rule DataBinding
ruleDataBinding 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataBindingAccess().getGroup()); }
		(rule__DataBinding__Group__0)
		{ after(grammarAccess.getDataBindingAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataList
entryRuleDataList
:
{ before(grammarAccess.getDataListRule()); }
	 ruleDataList
{ after(grammarAccess.getDataListRule()); } 
	 EOF 
;

// Rule DataList
ruleDataList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataListAccess().getGroup()); }
		(rule__DataList__Group__0)
		{ after(grammarAccess.getDataListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSTRING_OR_NUMBER
entryRuleSTRING_OR_NUMBER
:
{ before(grammarAccess.getSTRING_OR_NUMBERRule()); }
	 ruleSTRING_OR_NUMBER
{ after(grammarAccess.getSTRING_OR_NUMBERRule()); } 
	 EOF 
;

// Rule STRING_OR_NUMBER
ruleSTRING_OR_NUMBER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSTRING_OR_NUMBERAccess().getAlternatives()); }
		(rule__STRING_OR_NUMBER__Alternatives)
		{ after(grammarAccess.getSTRING_OR_NUMBERAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTestElementsAssignment_1_0()); }
		(rule__Model__TestElementsAssignment_1_0)
		{ after(grammarAccess.getModelAccess().getTestElementsAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getDataPackagesAssignment_1_1()); }
		(rule__Model__DataPackagesAssignment_1_1)
		{ after(grammarAccess.getModelAccess().getDataPackagesAssignment_1_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getDataBindingsAssignment_1_2()); }
		(rule__Model__DataBindingsAssignment_1_2)
		{ after(grammarAccess.getModelAccess().getDataBindingsAssignment_1_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TestElementsAlternatives_1_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTestElementsTestNodeParserRuleCall_1_0_0_0()); }
		ruleTestNode
		{ after(grammarAccess.getModelAccess().getTestElementsTestNodeParserRuleCall_1_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getTestElementsChainParserRuleCall_1_0_0_1()); }
		ruleChain
		{ after(grammarAccess.getModelAccess().getTestElementsChainParserRuleCall_1_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getModelAccess().getTestElementsTestContainerParserRuleCall_1_0_0_2()); }
		ruleTestContainer
		{ after(grammarAccess.getModelAccess().getTestElementsTestContainerParserRuleCall_1_0_0_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestNode__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestNodeAccess().getTestTargetParserRuleCall_0()); }
		ruleTestTarget
		{ after(grammarAccess.getTestNodeAccess().getTestTargetParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getTestNodeAccess().getTestViewpointParserRuleCall_1()); }
		ruleTestViewpoint
		{ after(grammarAccess.getTestNodeAccess().getTestViewpointParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeConnection__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeConnectionAccess().getInheritanceParserRuleCall_0()); }
		ruleInheritance
		{ after(grammarAccess.getNodeConnectionAccess().getInheritanceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeConnectionAccess().getRelationParserRuleCall_1()); }
		ruleRelation
		{ after(grammarAccess.getNodeConnectionAccess().getRelationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getNodeConnectionAccess().getDependencyParserRuleCall_2()); }
		ruleDependency
		{ after(grammarAccess.getNodeConnectionAccess().getDependencyParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInheritanceAccess().getLessThanSignVerticalLineHyphenMinusHyphenMinusKeyword_0_0()); }
		'<|--'
		{ after(grammarAccess.getInheritanceAccess().getLessThanSignVerticalLineHyphenMinusHyphenMinusKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInheritanceAccess().getGroup_0_1()); }
		(rule__Inheritance__Group_0_1__0)
		{ after(grammarAccess.getInheritanceAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInheritanceAccess().getSubClassAssignment_2_0()); }
		(rule__Inheritance__SubClassAssignment_2_0)
		{ after(grammarAccess.getInheritanceAccess().getSubClassAssignment_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getInheritanceAccess().getRefAssignment_2_1()); }
		(rule__Inheritance__RefAssignment_2_1)
		{ after(grammarAccess.getInheritanceAccess().getRefAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getHyphenMinusHyphenMinusKeyword_0_0()); }
		'--'
		{ after(grammarAccess.getRelationAccess().getHyphenMinusHyphenMinusKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationAccess().getGroup_0_1()); }
		(rule__Relation__Group_0_1__0)
		{ after(grammarAccess.getRelationAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_0_0()); }
		'-->'
		{ after(grammarAccess.getDependencyAccess().getHyphenMinusHyphenMinusGreaterThanSignKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getDependencyAccess().getGroup_0_1()); }
		(rule__Dependency__Group_0_1__0)
		{ after(grammarAccess.getDependencyAccess().getGroup_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chain__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChainAccess().getTargetChainParserRuleCall_0()); }
		ruleTargetChain
		{ after(grammarAccess.getChainAccess().getTargetChainParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getChainAccess().getNodeChainParserRuleCall_1()); }
		ruleNodeChain
		{ after(grammarAccess.getChainAccess().getNodeChainParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeChain__ConnectionsAlternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeChainAccess().getConnectionsRelationParserRuleCall_1_0_0()); }
		ruleRelation
		{ after(grammarAccess.getNodeChainAccess().getConnectionsRelationParserRuleCall_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getNodeChainAccess().getConnectionsDependencyParserRuleCall_1_0_1()); }
		ruleDependency
		{ after(grammarAccess.getNodeChainAccess().getConnectionsDependencyParserRuleCall_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestContainer__ElementsAlternatives_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestContainerAccess().getElementsTestContainerParserRuleCall_3_0_0()); }
		ruleTestContainer
		{ after(grammarAccess.getTestContainerAccess().getElementsTestContainerParserRuleCall_3_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTestContainerAccess().getElementsTestNodeParserRuleCall_3_0_1()); }
		ruleTestNode
		{ after(grammarAccess.getTestContainerAccess().getElementsTestNodeParserRuleCall_3_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataElement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataElementAccess().getTypeImportParserRuleCall_0()); }
		ruleTypeImport
		{ after(grammarAccess.getDataElementAccess().getTypeImportParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataElementAccess().getTypeDefParserRuleCall_1()); }
		ruleTypeDef
		{ after(grammarAccess.getDataElementAccess().getTypeDefParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataElementAccess().getTypeInterfaceParserRuleCall_2()); }
		ruleTypeInterface
		{ after(grammarAccess.getDataElementAccess().getTypeInterfaceParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeInterfaceAccess().getImportsAssignment_4_0()); }
		(rule__TypeInterface__ImportsAssignment_4_0)
		{ after(grammarAccess.getTypeInterfaceAccess().getImportsAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeInterfaceAccess().getGroup_4_1()); }
		(rule__TypeInterface__Group_4_1__0)
		{ after(grammarAccess.getTypeInterfaceAccess().getGroup_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataBindingAccess().getLessThanSignTildeTildeGreaterThanSignKeyword_1_0()); }
		'<~~>'
		{ after(grammarAccess.getDataBindingAccess().getLessThanSignTildeTildeGreaterThanSignKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataBindingAccess().getGroup_1_1()); }
		(rule__DataBinding__Group_1_1__0)
		{ after(grammarAccess.getDataBindingAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__STRING_OR_NUMBER__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSTRING_OR_NUMBERAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getSTRING_OR_NUMBERAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getSTRING_OR_NUMBERAccess().getINTTerminalRuleCall_1()); }
		RULE_INT
		{ after(grammarAccess.getSTRING_OR_NUMBERAccess().getINTTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getImportsAssignment_0()); }
	(rule__Model__ImportsAssignment_0)*
	{ after(grammarAccess.getModelAccess().getImportsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getModelAccess().getAlternatives_1()); }
	(rule__Model__Alternatives_1)*
	{ after(grammarAccess.getModelAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TopLevelImport__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopLevelImport__Group__0__Impl
	rule__TopLevelImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelImport__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopLevelImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getTopLevelImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelImport__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TopLevelImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelImport__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTopLevelImportAccess().getImportURIAssignment_1()); }
	(rule__TopLevelImport__ImportURIAssignment_1)
	{ after(grammarAccess.getTopLevelImportAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TestTarget__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestTarget__Group__0__Impl
	rule__TestTarget__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestTarget__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestTargetAccess().getNameAssignment_0()); }
	(rule__TestTarget__NameAssignment_0)
	{ after(grammarAccess.getTestTargetAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestTarget__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestTarget__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestTarget__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestTargetAccess().getStereotypeAssignment_1()); }
	(rule__TestTarget__StereotypeAssignment_1)?
	{ after(grammarAccess.getTestTargetAccess().getStereotypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TestViewpoint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestViewpoint__Group__0__Impl
	rule__TestViewpoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestViewpointAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getTestViewpointAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestViewpoint__Group__1__Impl
	rule__TestViewpoint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestViewpointAccess().getNameAssignment_1()); }
	(rule__TestViewpoint__NameAssignment_1)
	{ after(grammarAccess.getTestViewpointAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestViewpoint__Group__2__Impl
	rule__TestViewpoint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestViewpointAccess().getGroup_2()); }
	(rule__TestViewpoint__Group_2__0)?
	{ after(grammarAccess.getTestViewpointAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestViewpoint__Group__3__Impl
	rule__TestViewpoint__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestViewpointAccess().getGroup_3()); }
	(rule__TestViewpoint__Group_3__0)?
	{ after(grammarAccess.getTestViewpointAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestViewpoint__Group__4__Impl
	rule__TestViewpoint__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestViewpointAccess().getGroup_4()); }
	(rule__TestViewpoint__Group_4__0)?
	{ after(grammarAccess.getTestViewpointAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestViewpoint__Group__5__Impl
	rule__TestViewpoint__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestViewpointAccess().getRightSquareBracketKeyword_5()); }
	']'
	{ after(grammarAccess.getTestViewpointAccess().getRightSquareBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestViewpoint__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestViewpointAccess().getStereotypeAssignment_6()); }
	(rule__TestViewpoint__StereotypeAssignment_6)?
	{ after(grammarAccess.getTestViewpointAccess().getStereotypeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TestViewpoint__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestViewpoint__Group_2__0__Impl
	rule__TestViewpoint__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestViewpointAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getTestViewpointAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestViewpoint__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestViewpointAccess().getTestItemsAssignment_2_1()); }
	(rule__TestViewpoint__TestItemsAssignment_2_1)
	{ after(grammarAccess.getTestViewpointAccess().getTestItemsAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TestViewpoint__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestViewpoint__Group_3__0__Impl
	rule__TestViewpoint__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestViewpointAccess().getCommaKeyword_3_0()); }
	','
	{ after(grammarAccess.getTestViewpointAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestViewpoint__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestViewpointAccess().getQualityRiskAssignment_3_1()); }
	(rule__TestViewpoint__QualityRiskAssignment_3_1)
	{ after(grammarAccess.getTestViewpointAccess().getQualityRiskAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TestViewpoint__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestViewpoint__Group_4__0__Impl
	rule__TestViewpoint__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestViewpointAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getTestViewpointAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestViewpoint__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestViewpointAccess().getCoverageAssignment_4_1()); }
	(rule__TestViewpoint__CoverageAssignment_4_1)
	{ after(grammarAccess.getTestViewpointAccess().getCoverageAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inheritance__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inheritance__Group__0__Impl
	rule__Inheritance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInheritanceAccess().getAlternatives_0()); }
	(rule__Inheritance__Alternatives_0)
	{ after(grammarAccess.getInheritanceAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inheritance__Group__1__Impl
	rule__Inheritance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInheritanceAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getInheritanceAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inheritance__Group__2__Impl
	rule__Inheritance__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInheritanceAccess().getAlternatives_2()); }
	(rule__Inheritance__Alternatives_2)
	{ after(grammarAccess.getInheritanceAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inheritance__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInheritanceAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getInheritanceAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Inheritance__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inheritance__Group_0_1__0__Impl
	rule__Inheritance__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInheritanceAccess().getLessThanSignVerticalLineHyphenMinusKeyword_0_1_0()); }
	'<|-'
	{ after(grammarAccess.getInheritanceAccess().getLessThanSignVerticalLineHyphenMinusKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inheritance__Group_0_1__1__Impl
	rule__Inheritance__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInheritanceAccess().getStereotypeAssignment_0_1_1()); }
	(rule__Inheritance__StereotypeAssignment_0_1_1)
	{ after(grammarAccess.getInheritanceAccess().getStereotypeAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Inheritance__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInheritanceAccess().getHyphenMinusKeyword_0_1_2()); }
	'-'
	{ after(grammarAccess.getInheritanceAccess().getHyphenMinusKeyword_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getAlternatives_0()); }
	(rule__Relation__Alternatives_0)
	{ after(grammarAccess.getRelationAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getSourceAssignment_1()); }
	(rule__Relation__SourceAssignment_1)
	{ after(grammarAccess.getRelationAccess().getSourceAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_0_1__0__Impl
	rule__Relation__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getHyphenMinusKeyword_0_1_0()); }
	'-'
	{ after(grammarAccess.getRelationAccess().getHyphenMinusKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_0_1__1__Impl
	rule__Relation__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getStereotypeAssignment_0_1_1()); }
	(rule__Relation__StereotypeAssignment_0_1_1)
	{ after(grammarAccess.getRelationAccess().getStereotypeAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Relation__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelationAccess().getHyphenMinusKeyword_0_1_2()); }
	'-'
	{ after(grammarAccess.getRelationAccess().getHyphenMinusKeyword_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dependency__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__0__Impl
	rule__Dependency__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getAlternatives_0()); }
	(rule__Dependency__Alternatives_0)
	{ after(grammarAccess.getDependencyAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getDependsOnAssignment_1()); }
	(rule__Dependency__DependsOnAssignment_1)
	{ after(grammarAccess.getDependencyAccess().getDependsOnAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Dependency__Group_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group_0_1__0__Impl
	rule__Dependency__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getHyphenMinusKeyword_0_1_0()); }
	'-'
	{ after(grammarAccess.getDependencyAccess().getHyphenMinusKeyword_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group_0_1__1__Impl
	rule__Dependency__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getStereotypeAssignment_0_1_1()); }
	(rule__Dependency__StereotypeAssignment_0_1_1)
	{ after(grammarAccess.getDependencyAccess().getStereotypeAssignment_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group_0_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Dependency__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__Group_0_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDependencyAccess().getHyphenMinusGreaterThanSignKeyword_0_1_2()); }
	'->'
	{ after(grammarAccess.getDependencyAccess().getHyphenMinusGreaterThanSignKeyword_0_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TargetChain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetChain__Group__0__Impl
	rule__TargetChain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetChain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetChainAccess().getStartAssignment_0()); }
	(rule__TargetChain__StartAssignment_0)
	{ after(grammarAccess.getTargetChainAccess().getStartAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetChain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetChain__Group__1__Impl
	rule__TargetChain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetChain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetChainAccess().getConnectionsAssignment_1()); }
	(rule__TargetChain__ConnectionsAssignment_1)
	{ after(grammarAccess.getTargetChainAccess().getConnectionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetChain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TargetChain__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetChain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTargetChainAccess().getConnectionsAssignment_2()); }
	(rule__TargetChain__ConnectionsAssignment_2)*
	{ after(grammarAccess.getTargetChainAccess().getConnectionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NodeChain__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeChain__Group__0__Impl
	rule__NodeChain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeChain__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeChainAccess().getStartAssignment_0()); }
	(rule__NodeChain__StartAssignment_0)
	{ after(grammarAccess.getNodeChainAccess().getStartAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeChain__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeChain__Group__1__Impl
	rule__NodeChain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeChain__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeChainAccess().getConnectionsAssignment_1()); }
	(rule__NodeChain__ConnectionsAssignment_1)
	{ after(grammarAccess.getNodeChainAccess().getConnectionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeChain__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NodeChain__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeChain__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNodeChainAccess().getConnectionsAssignment_2()); }
	(rule__NodeChain__ConnectionsAssignment_2)*
	{ after(grammarAccess.getNodeChainAccess().getConnectionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringList__Group__0__Impl
	rule__StringList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringListAccess().getStringListAction_0()); }
	()
	{ after(grammarAccess.getStringListAccess().getStringListAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringList__Group__1__Impl
	rule__StringList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringListAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getStringListAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringList__Group__2__Impl
	rule__StringList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringListAccess().getGroup_2()); }
	(rule__StringList__Group_2__0)?
	{ after(grammarAccess.getStringListAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringList__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringListAccess().getRightSquareBracketKeyword_3()); }
	']'
	{ after(grammarAccess.getStringListAccess().getRightSquareBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringList__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringList__Group_2__0__Impl
	rule__StringList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringList__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringListAccess().getElementsAssignment_2_0()); }
	(rule__StringList__ElementsAssignment_2_0)
	{ after(grammarAccess.getStringListAccess().getElementsAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringList__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringList__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringListAccess().getGroup_2_1()); }
	(rule__StringList__Group_2_1__0)*
	{ after(grammarAccess.getStringListAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringList__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringList__Group_2_1__0__Impl
	rule__StringList__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringList__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringListAccess().getCommaKeyword_2_1_0()); }
	','
	{ after(grammarAccess.getStringListAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringList__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringList__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringList__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringListAccess().getElementsAssignment_2_1_1()); }
	(rule__StringList__ElementsAssignment_2_1_1)
	{ after(grammarAccess.getStringListAccess().getElementsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualityRisk__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityRisk__Group__0__Impl
	rule__QualityRisk__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRisk__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityRiskAccess().getLeftSquareBracketKeyword_0()); }
	'['
	{ after(grammarAccess.getQualityRiskAccess().getLeftSquareBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRisk__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityRisk__Group__1__Impl
	rule__QualityRisk__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRisk__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityRiskAccess().getImportanceKeyword_1()); }
	'importance='
	{ after(grammarAccess.getQualityRiskAccess().getImportanceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRisk__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityRisk__Group__2__Impl
	rule__QualityRisk__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRisk__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityRiskAccess().getImportanceAssignment_2()); }
	(rule__QualityRisk__ImportanceAssignment_2)
	{ after(grammarAccess.getQualityRiskAccess().getImportanceAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRisk__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityRisk__Group__3__Impl
	rule__QualityRisk__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRisk__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityRiskAccess().getCommaKeyword_3()); }
	','
	{ after(grammarAccess.getQualityRiskAccess().getCommaKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRisk__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityRisk__Group__4__Impl
	rule__QualityRisk__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRisk__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityRiskAccess().getSeverityKeyword_4()); }
	'severity='
	{ after(grammarAccess.getQualityRiskAccess().getSeverityKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRisk__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityRisk__Group__5__Impl
	rule__QualityRisk__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRisk__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityRiskAccess().getSeverityAssignment_5()); }
	(rule__QualityRisk__SeverityAssignment_5)
	{ after(grammarAccess.getQualityRiskAccess().getSeverityAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRisk__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualityRisk__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRisk__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualityRiskAccess().getRightSquareBracketKeyword_6()); }
	']'
	{ after(grammarAccess.getQualityRiskAccess().getRightSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TestContainer__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestContainer__Group__0__Impl
	rule__TestContainer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestContainer__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestContainerAccess().getContainerKeyword_0()); }
	'container'
	{ after(grammarAccess.getTestContainerAccess().getContainerKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestContainer__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestContainer__Group__1__Impl
	rule__TestContainer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestContainer__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestContainerAccess().getNameAssignment_1()); }
	(rule__TestContainer__NameAssignment_1)
	{ after(grammarAccess.getTestContainerAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestContainer__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestContainer__Group__2__Impl
	rule__TestContainer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TestContainer__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestContainerAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTestContainerAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestContainer__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestContainer__Group__3__Impl
	rule__TestContainer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TestContainer__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestContainerAccess().getElementsAssignment_3()); }
	(rule__TestContainer__ElementsAssignment_3)*
	{ after(grammarAccess.getTestContainerAccess().getElementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestContainer__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TestContainer__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestContainer__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTestContainerAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTestContainerAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataPackage__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataPackage__Group__0__Impl
	rule__DataPackage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPackage__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataPackageAccess().getDataPackageKeyword_0()); }
	'data-package'
	{ after(grammarAccess.getDataPackageAccess().getDataPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPackage__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataPackage__Group__1__Impl
	rule__DataPackage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPackage__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataPackageAccess().getNameAssignment_1()); }
	(rule__DataPackage__NameAssignment_1)
	{ after(grammarAccess.getDataPackageAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPackage__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataPackage__Group__2__Impl
	rule__DataPackage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPackage__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataPackageAccess().getDescriptionAssignment_2()); }
	(rule__DataPackage__DescriptionAssignment_2)?
	{ after(grammarAccess.getDataPackageAccess().getDescriptionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPackage__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataPackage__Group__3__Impl
	rule__DataPackage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPackage__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataPackageAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getDataPackageAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPackage__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataPackage__Group__4__Impl
	rule__DataPackage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPackage__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataPackageAccess().getEntriesAssignment_4()); }
	(rule__DataPackage__EntriesAssignment_4)*
	{ after(grammarAccess.getDataPackageAccess().getEntriesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPackage__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataPackage__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPackage__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataPackageAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getDataPackageAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeImport__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeImport__Group__0__Impl
	rule__TypeImport__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeImport__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeImportAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getTypeImportAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeImport__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeImport__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeImport__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeImportAccess().getImportURIAssignment_1()); }
	(rule__TypeImport__ImportURIAssignment_1)
	{ after(grammarAccess.getTypeImportAccess().getImportURIAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__0__Impl
	rule__TypeDef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getDefKeyword_0()); }
	'def'
	{ after(grammarAccess.getTypeDefAccess().getDefKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__1__Impl
	rule__TypeDef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getNameAssignment_1()); }
	(rule__TypeDef__NameAssignment_1)
	{ after(grammarAccess.getTypeDefAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeDef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeDefAccess().getTypeSymbolAssignment_2()); }
	(rule__TypeDef__TypeSymbolAssignment_2)
	{ after(grammarAccess.getTypeDefAccess().getTypeSymbolAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeInterface__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInterface__Group__0__Impl
	rule__TypeInterface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInterfaceAccess().getInterfaceKeyword_0()); }
	'interface'
	{ after(grammarAccess.getTypeInterfaceAccess().getInterfaceKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInterface__Group__1__Impl
	rule__TypeInterface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInterfaceAccess().getNameAssignment_1()); }
	(rule__TypeInterface__NameAssignment_1)
	{ after(grammarAccess.getTypeInterfaceAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInterface__Group__2__Impl
	rule__TypeInterface__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInterfaceAccess().getGroup_2()); }
	(rule__TypeInterface__Group_2__0)?
	{ after(grammarAccess.getTypeInterfaceAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInterface__Group__3__Impl
	rule__TypeInterface__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInterfaceAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getTypeInterfaceAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInterface__Group__4__Impl
	rule__TypeInterface__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInterfaceAccess().getAlternatives_4()); }
	(rule__TypeInterface__Alternatives_4)*
	{ after(grammarAccess.getTypeInterfaceAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInterface__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInterfaceAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getTypeInterfaceAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeInterface__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInterface__Group_2__0__Impl
	rule__TypeInterface__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInterfaceAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getTypeInterfaceAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInterface__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInterfaceAccess().getSuperAssignment_2_1()); }
	(rule__TypeInterface__SuperAssignment_2_1)
	{ after(grammarAccess.getTypeInterfaceAccess().getSuperAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeInterface__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInterface__Group_4_1__0__Impl
	rule__TypeInterface__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInterfaceAccess().getTypeKeyword_4_1_0()); }
	'type'
	{ after(grammarAccess.getTypeInterfaceAccess().getTypeKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__TypeInterface__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTypeInterfaceAccess().getRefsAssignment_4_1_1()); }
	(rule__TypeInterface__RefsAssignment_4_1_1)
	{ after(grammarAccess.getTypeInterfaceAccess().getRefsAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataBinding__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBinding__Group__0__Impl
	rule__DataBinding__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBindingAccess().getDataListAssignment_0()); }
	(rule__DataBinding__DataListAssignment_0)
	{ after(grammarAccess.getDataBindingAccess().getDataListAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBinding__Group__1__Impl
	rule__DataBinding__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBindingAccess().getAlternatives_1()); }
	(rule__DataBinding__Alternatives_1)
	{ after(grammarAccess.getDataBindingAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBinding__Group__2__Impl
	rule__DataBinding__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBindingAccess().getLeftSquareBracketKeyword_2()); }
	'['
	{ after(grammarAccess.getDataBindingAccess().getLeftSquareBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBinding__Group__3__Impl
	rule__DataBinding__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBindingAccess().getViewpointAssignment_3()); }
	(rule__DataBinding__ViewpointAssignment_3)
	{ after(grammarAccess.getDataBindingAccess().getViewpointAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBinding__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBindingAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getDataBindingAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataBinding__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBinding__Group_1_1__0__Impl
	rule__DataBinding__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBindingAccess().getLessThanSignTildeKeyword_1_1_0()); }
	'<~'
	{ after(grammarAccess.getDataBindingAccess().getLessThanSignTildeKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBinding__Group_1_1__1__Impl
	rule__DataBinding__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBindingAccess().getStereotypeAssignment_1_1_1()); }
	(rule__DataBinding__StereotypeAssignment_1_1_1)
	{ after(grammarAccess.getDataBindingAccess().getStereotypeAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataBinding__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataBindingAccess().getTildeGreaterThanSignKeyword_1_1_2()); }
	'~>'
	{ after(grammarAccess.getDataBindingAccess().getTildeGreaterThanSignKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataList__Group__0__Impl
	rule__DataList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataListAccess().getElementsAssignment_0()); }
	(rule__DataList__ElementsAssignment_0)
	{ after(grammarAccess.getDataListAccess().getElementsAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataListAccess().getGroup_1()); }
	(rule__DataList__Group_1__0)*
	{ after(grammarAccess.getDataListAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataList__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataList__Group_1__0__Impl
	rule__DataList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataList__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataListAccess().getCommaKeyword_1_0()); }
	','
	{ after(grammarAccess.getDataListAccess().getCommaKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataList__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataList__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataListAccess().getElementsAssignment_1_1()); }
	(rule__DataList__ElementsAssignment_1_1)
	{ after(grammarAccess.getDataListAccess().getElementsAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Model__ImportsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getImportsTopLevelImportParserRuleCall_0_0()); }
		ruleTopLevelImport
		{ after(grammarAccess.getModelAccess().getImportsTopLevelImportParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__TestElementsAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getTestElementsAlternatives_1_0_0()); }
		(rule__Model__TestElementsAlternatives_1_0_0)
		{ after(grammarAccess.getModelAccess().getTestElementsAlternatives_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DataPackagesAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDataPackagesDataPackageParserRuleCall_1_1_0()); }
		ruleDataPackage
		{ after(grammarAccess.getModelAccess().getDataPackagesDataPackageParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__DataBindingsAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getModelAccess().getDataBindingsDataBindingParserRuleCall_1_2_0()); }
		ruleDataBinding
		{ after(grammarAccess.getModelAccess().getDataBindingsDataBindingParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TopLevelImport__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTopLevelImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTopLevelImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestTarget__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestTargetAccess().getNameTESTTARGET_STRINGTerminalRuleCall_0_0()); }
		RULE_TESTTARGET_STRING
		{ after(grammarAccess.getTestTargetAccess().getNameTESTTARGET_STRINGTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestTarget__StereotypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestTargetAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_1_0()); }
		RULE_STEREOTYPE_STRING
		{ after(grammarAccess.getTestTargetAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestViewpointAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTestViewpointAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__TestItemsAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestViewpointAccess().getTestItemsStringListParserRuleCall_2_1_0()); }
		ruleStringList
		{ after(grammarAccess.getTestViewpointAccess().getTestItemsStringListParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__QualityRiskAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestViewpointAccess().getQualityRiskQualityRiskParserRuleCall_3_1_0()); }
		ruleQualityRisk
		{ after(grammarAccess.getTestViewpointAccess().getQualityRiskQualityRiskParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__CoverageAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestViewpointAccess().getCoverageSTRINGTerminalRuleCall_4_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTestViewpointAccess().getCoverageSTRINGTerminalRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestViewpoint__StereotypeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestViewpointAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_6_0()); }
		RULE_STEREOTYPE_STRING
		{ after(grammarAccess.getTestViewpointAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__StereotypeAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInheritanceAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_0_1_1_0()); }
		RULE_STEREOTYPE_STRING
		{ after(grammarAccess.getInheritanceAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__SubClassAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInheritanceAccess().getSubClassTestViewpointParserRuleCall_2_0_0()); }
		ruleTestViewpoint
		{ after(grammarAccess.getInheritanceAccess().getSubClassTestViewpointParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Inheritance__RefAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInheritanceAccess().getRefTestViewpointCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getInheritanceAccess().getRefTestViewpointSTRINGTerminalRuleCall_2_1_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getInheritanceAccess().getRefTestViewpointSTRINGTerminalRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getInheritanceAccess().getRefTestViewpointCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__StereotypeAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_0_1_1_0()); }
		RULE_STEREOTYPE_STRING
		{ after(grammarAccess.getRelationAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__SourceAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationAccess().getSourceTestNodeParserRuleCall_1_0()); }
		ruleTestNode
		{ after(grammarAccess.getRelationAccess().getSourceTestNodeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__StereotypeAssignment_0_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_0_1_1_0()); }
		RULE_STEREOTYPE_STRING
		{ after(grammarAccess.getDependencyAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_0_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Dependency__DependsOnAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDependencyAccess().getDependsOnTestNodeParserRuleCall_1_0()); }
		ruleTestNode
		{ after(grammarAccess.getDependencyAccess().getDependsOnTestNodeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetChain__StartAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetChainAccess().getStartTestTargetParserRuleCall_0_0()); }
		ruleTestTarget
		{ after(grammarAccess.getTargetChainAccess().getStartTestTargetParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetChain__ConnectionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetChainAccess().getConnectionsInheritanceParserRuleCall_1_0()); }
		ruleInheritance
		{ after(grammarAccess.getTargetChainAccess().getConnectionsInheritanceParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TargetChain__ConnectionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTargetChainAccess().getConnectionsNodeConnectionParserRuleCall_2_0()); }
		ruleNodeConnection
		{ after(grammarAccess.getTargetChainAccess().getConnectionsNodeConnectionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeChain__StartAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeChainAccess().getStartTestNodeParserRuleCall_0_0()); }
		ruleTestNode
		{ after(grammarAccess.getNodeChainAccess().getStartTestNodeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeChain__ConnectionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeChainAccess().getConnectionsAlternatives_1_0()); }
		(rule__NodeChain__ConnectionsAlternatives_1_0)
		{ after(grammarAccess.getNodeChainAccess().getConnectionsAlternatives_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NodeChain__ConnectionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNodeChainAccess().getConnectionsNodeConnectionParserRuleCall_2_0()); }
		ruleNodeConnection
		{ after(grammarAccess.getNodeChainAccess().getConnectionsNodeConnectionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringList__ElementsAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringListAccess().getElementsSTRING_OR_NUMBERParserRuleCall_2_0_0()); }
		ruleSTRING_OR_NUMBER
		{ after(grammarAccess.getStringListAccess().getElementsSTRING_OR_NUMBERParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringList__ElementsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringListAccess().getElementsSTRING_OR_NUMBERParserRuleCall_2_1_1_0()); }
		ruleSTRING_OR_NUMBER
		{ after(grammarAccess.getStringListAccess().getElementsSTRING_OR_NUMBERParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRisk__ImportanceAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualityRiskAccess().getImportanceINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getQualityRiskAccess().getImportanceINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualityRisk__SeverityAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQualityRiskAccess().getSeverityINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getQualityRiskAccess().getSeverityINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestContainer__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestContainerAccess().getNameSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTestContainerAccess().getNameSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TestContainer__ElementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTestContainerAccess().getElementsAlternatives_3_0()); }
		(rule__TestContainer__ElementsAlternatives_3_0)
		{ after(grammarAccess.getTestContainerAccess().getElementsAlternatives_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPackage__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataPackageAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getDataPackageAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPackage__DescriptionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataPackageAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getDataPackageAccess().getDescriptionSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataPackage__EntriesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataPackageAccess().getEntriesDataElementParserRuleCall_4_0()); }
		ruleDataElement
		{ after(grammarAccess.getDataPackageAccess().getEntriesDataElementParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeImport__ImportURIAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getTypeImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeDefAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDef__TypeSymbolAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDefAccess().getTypeSymbolIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeDefAccess().getTypeSymbolIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeInterfaceAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeInterfaceAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__SuperAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeInterfaceAccess().getSuperIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getTypeInterfaceAccess().getSuperIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__ImportsAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeInterfaceAccess().getImportsTypeImportParserRuleCall_4_0_0()); }
		ruleTypeImport
		{ after(grammarAccess.getTypeInterfaceAccess().getImportsTypeImportParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeInterface__RefsAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeInterfaceAccess().getRefsQualifiedNameParserRuleCall_4_1_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getTypeInterfaceAccess().getRefsQualifiedNameParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__DataListAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataBindingAccess().getDataListDataListParserRuleCall_0_0()); }
		ruleDataList
		{ after(grammarAccess.getDataBindingAccess().getDataListDataListParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__StereotypeAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataBindingAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_1_1_1_0()); }
		RULE_STEREOTYPE_STRING
		{ after(grammarAccess.getDataBindingAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataBinding__ViewpointAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataBindingAccess().getViewpointTestViewpointCrossReference_3_0()); }
		(
			{ before(grammarAccess.getDataBindingAccess().getViewpointTestViewpointSTRINGTerminalRuleCall_3_0_1()); }
			RULE_STRING
			{ after(grammarAccess.getDataBindingAccess().getViewpointTestViewpointSTRINGTerminalRuleCall_3_0_1()); }
		)
		{ after(grammarAccess.getDataBindingAccess().getViewpointTestViewpointCrossReference_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataList__ElementsAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataListAccess().getElementsQualifiedNameParserRuleCall_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getDataListAccess().getElementsQualifiedNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataList__ElementsAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataListAccess().getElementsQualifiedNameParserRuleCall_1_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getDataListAccess().getElementsQualifiedNameParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

fragment RULE_ESCAPED_TESTTARGET_CHAR : '\\' ('n'|'t'|'r'|'\\'|'('|')');

RULE_TESTTARGET_STRING : '(' (RULE_ESCAPED_TESTTARGET_CHAR|~(('\\'|'('|')')))+ ')';

fragment RULE_ESCAPED_STEREOTYPE_CHAR : '\\' ('n'|'t'|'r'|'\\'|'<'|'>');

RULE_STEREOTYPE_STRING : '<<' (RULE_ESCAPED_STEREOTYPE_CHAR|~(('\\'|'<'|'>')))* '>>';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;

grammar org.opentestmodeling.vstep.Ngt with org.eclipse.xtext.common.Terminals

generate ngt "http://www.opentestmodeling.org/vstep/Ngt"

Model:
	testTargets += (TestNode | Chain | TestContainer)*;

//
// Node related.
//
TestNode: TestTarget | TestViewpoint;

TestTarget:
	'(' name=STRING ')' (stereotype=STEREOTYPE_STRING)? ;

TestViewpoint:
	'[' name=STRING (',' testItems = StringList)? (',' qualityRisk = QualityRisk)? (',' coverage = STRING)? ']' (stereotype=STEREOTYPE_STRING)?;


NodeConnection: Inheritance | Relation | Dependency;

Inheritance:
	'<|-' (stereotype=STEREOTYPE_STRING)? '-' source = TestNode;

Relation:
	'-' (stereotype=STEREOTYPE_STRING)? '-' source = TestNode;

Dependency:
	'<-' (stereotype=STEREOTYPE_STRING)? '-' source = TestNode;


Chain: TargetChain | NodeChain;

TargetChain:
	start=TestTarget (connections += Inheritance) (connections += NodeConnection)*;

NodeChain:
	start=TestNode (connections += (Relation | Dependency)) (connections += NodeConnection)*;

StringList:
	{StringList} '[' (list += STRING_OR_NUMBER (',' list += STRING_OR_NUMBER)*)? ']';

QualityRisk:
	'[' 'importance=' importance=INT ',' 'severity=' severity=INT ']';

//
// Test container related.
//
TestContainer:
	'container' name=STRING ('{'
		(elements += (TestContainer | TestNode))*
	'}')?;

ContainerConnection:
	connector = (Relation | Dependency) target = TestContainer;

TestContainerChain:
	start = TestContainer (connections += ContainerConnection)*
;
STRING_OR_NUMBER: STRING | INT;

terminal fragment ESCAPED_STEREOTYPE_CHAR:
	'\\' ('n'|'t'|'r'|'\\'|'<'|'>');
terminal STEREOTYPE_STRING:
	'<<' (ESCAPED_STEREOTYPE_CHAR| !('\\'|'<'|'>'))* '>>';


grammar org.opentestmodeling.vstep.Ngt with org.eclipse.xtext.common.Terminals

generate ngt "http://www.opentestmodeling.org/vstep/Ngt"

Model:
	imports += TopLevelImport*
	(testElements += (TestNode | Chain | TestContainer) |
	dataPackages += DataPackage |
	dataBindings += DataBinding)*;

//
// Import external models.
//
TopLevelImport:
	'import' importURI = STRING;

//
// Node related.
//
TestNode: TestTarget | TestViewpoint;

TestTarget:
	name=TESTTARGET_STRING (stereotype=STEREOTYPE_STRING)? ;

TestViewpoint:
	'[' name=STRING (',' testItems = StringList)? (',' qualityRisk = QualityRisk)? (',' coverage = STRING)? ']' (stereotype=STEREOTYPE_STRING)?;


NodeConnection: Inheritance | Relation | Dependency;

Inheritance:
	('<|--' | '<|-' stereotype=STEREOTYPE_STRING '-') '[' (subClass = TestViewpoint | ref = [TestViewpoint|STRING]) ']';

Relation:
	('--' | '-' stereotype=STEREOTYPE_STRING '-') source = TestNode;

Dependency:
	('-->' | '-' stereotype=STEREOTYPE_STRING '->') dependsOn = TestNode;


Chain: TargetChain | NodeChain;

TargetChain:
	start=TestTarget (connections += Inheritance) (connections += NodeConnection)*;

NodeChain:
	start=TestNode (connections += (Relation | Dependency)) (connections += NodeConnection)*;

StringList:
	{StringList} '[' (elements += STRING_OR_NUMBER (',' elements += STRING_OR_NUMBER)*)? ']';

QualityRisk:
	'[' 'importance=' importance=INT ',' 'severity=' severity=INT ']';

//
// Test container related.
//
TestContainer:
	'container' name=STRING '{'
		(elements += (TestContainer | TestNode))*
	'}';



//
// Data Package related.
//
DataPackage:
	'data-package' name=ID (description = STRING)? '{'
		(entries += DataElement)*
	'}';

DataElement:
	TypeImport | TypeDef | TypeInterface;

TypeImport:
	'import' importURI = STRING; // The root must have TypeElements

TypeDef:
	'def' name=ID typeSymbol=ID;

TypeInterface:
	'interface' name=ID ('extends' super=ID)? '{'
//		(imports += TypeImport | ('type' (refs += [TypeDef] | refs += [TypeInterface])))*
		(imports += TypeImport | ('type' refs += QualifiedName))*
	'}';

//
// Data Binding related
//
DataBinding:
	dataList=DataList ('<~~>' | '<~' stereotype=STEREOTYPE_STRING '~>') '[' viewpoint=[TestViewpoint|STRING] ']';

DataList:
	elements += QualifiedName (',' elements += QualifiedName)*;

//

QualifiedName:
	ID ('.' ID)*;

STRING_OR_NUMBER: STRING | INT;

terminal fragment ESCAPED_TESTTARGET_CHAR:
	'\\' ('n'|'t'|'r'|'\\'|'('|')');
terminal TESTTARGET_STRING:
	'(' (ESCAPED_TESTTARGET_CHAR| !('\\'|'('|')'))+ ')';

terminal fragment ESCAPED_STEREOTYPE_CHAR:
	'\\' ('n'|'t'|'r'|'\\'|'<'|'>');
terminal STEREOTYPE_STRING:
	'<<' (ESCAPED_STEREOTYPE_CHAR| !('\\'|'<'|'>'))* '>>';


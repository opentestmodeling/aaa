/**
 * generated by Xtext 2.15.0
 */
package org.opentestmodeling.vstep.ngt.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.opentestmodeling.vstep.ngt.Inheritance;
import org.opentestmodeling.vstep.ngt.NgtPackage;
import org.opentestmodeling.vstep.ngt.TestViewpoint;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Inheritance</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.opentestmodeling.vstep.ngt.impl.InheritanceImpl#getSubClass <em>Sub Class</em>}</li>
 *   <li>{@link org.opentestmodeling.vstep.ngt.impl.InheritanceImpl#getRef <em>Ref</em>}</li>
 * </ul>
 *
 * @generated
 */
public class InheritanceImpl extends NodeConnectionImpl implements Inheritance
{
  /**
   * The cached value of the '{@link #getSubClass() <em>Sub Class</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubClass()
   * @generated
   * @ordered
   */
  protected TestViewpoint subClass;

  /**
   * The cached value of the '{@link #getRef() <em>Ref</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRef()
   * @generated
   * @ordered
   */
  protected TestViewpoint ref;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected InheritanceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return NgtPackage.Literals.INHERITANCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TestViewpoint getSubClass()
  {
    return subClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSubClass(TestViewpoint newSubClass, NotificationChain msgs)
  {
    TestViewpoint oldSubClass = subClass;
    subClass = newSubClass;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, NgtPackage.INHERITANCE__SUB_CLASS, oldSubClass, newSubClass);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSubClass(TestViewpoint newSubClass)
  {
    if (newSubClass != subClass)
    {
      NotificationChain msgs = null;
      if (subClass != null)
        msgs = ((InternalEObject)subClass).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - NgtPackage.INHERITANCE__SUB_CLASS, null, msgs);
      if (newSubClass != null)
        msgs = ((InternalEObject)newSubClass).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - NgtPackage.INHERITANCE__SUB_CLASS, null, msgs);
      msgs = basicSetSubClass(newSubClass, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NgtPackage.INHERITANCE__SUB_CLASS, newSubClass, newSubClass));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TestViewpoint getRef()
  {
    if (ref != null && ref.eIsProxy())
    {
      InternalEObject oldRef = (InternalEObject)ref;
      ref = (TestViewpoint)eResolveProxy(oldRef);
      if (ref != oldRef)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, NgtPackage.INHERITANCE__REF, oldRef, ref));
      }
    }
    return ref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public TestViewpoint basicGetRef()
  {
    return ref;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRef(TestViewpoint newRef)
  {
    TestViewpoint oldRef = ref;
    ref = newRef;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NgtPackage.INHERITANCE__REF, oldRef, ref));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case NgtPackage.INHERITANCE__SUB_CLASS:
        return basicSetSubClass(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case NgtPackage.INHERITANCE__SUB_CLASS:
        return getSubClass();
      case NgtPackage.INHERITANCE__REF:
        if (resolve) return getRef();
        return basicGetRef();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case NgtPackage.INHERITANCE__SUB_CLASS:
        setSubClass((TestViewpoint)newValue);
        return;
      case NgtPackage.INHERITANCE__REF:
        setRef((TestViewpoint)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case NgtPackage.INHERITANCE__SUB_CLASS:
        setSubClass((TestViewpoint)null);
        return;
      case NgtPackage.INHERITANCE__REF:
        setRef((TestViewpoint)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case NgtPackage.INHERITANCE__SUB_CLASS:
        return subClass != null;
      case NgtPackage.INHERITANCE__REF:
        return ref != null;
    }
    return super.eIsSet(featureID);
  }

} //InheritanceImpl

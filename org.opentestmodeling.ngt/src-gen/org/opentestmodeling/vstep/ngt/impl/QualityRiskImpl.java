/**
 * generated by Xtext 2.15.0
 */
package org.opentestmodeling.vstep.ngt.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.opentestmodeling.vstep.ngt.NgtPackage;
import org.opentestmodeling.vstep.ngt.QualityRisk;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Quality Risk</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.opentestmodeling.vstep.ngt.impl.QualityRiskImpl#getImportance <em>Importance</em>}</li>
 *   <li>{@link org.opentestmodeling.vstep.ngt.impl.QualityRiskImpl#getSeverity <em>Severity</em>}</li>
 * </ul>
 *
 * @generated
 */
public class QualityRiskImpl extends MinimalEObjectImpl.Container implements QualityRisk
{
  /**
   * The default value of the '{@link #getImportance() <em>Importance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportance()
   * @generated
   * @ordered
   */
  protected static final int IMPORTANCE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getImportance() <em>Importance</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getImportance()
   * @generated
   * @ordered
   */
  protected int importance = IMPORTANCE_EDEFAULT;

  /**
   * The default value of the '{@link #getSeverity() <em>Severity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSeverity()
   * @generated
   * @ordered
   */
  protected static final int SEVERITY_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSeverity() <em>Severity</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSeverity()
   * @generated
   * @ordered
   */
  protected int severity = SEVERITY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected QualityRiskImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return NgtPackage.Literals.QUALITY_RISK;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getImportance()
  {
    return importance;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setImportance(int newImportance)
  {
    int oldImportance = importance;
    importance = newImportance;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NgtPackage.QUALITY_RISK__IMPORTANCE, oldImportance, importance));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getSeverity()
  {
    return severity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSeverity(int newSeverity)
  {
    int oldSeverity = severity;
    severity = newSeverity;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, NgtPackage.QUALITY_RISK__SEVERITY, oldSeverity, severity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case NgtPackage.QUALITY_RISK__IMPORTANCE:
        return getImportance();
      case NgtPackage.QUALITY_RISK__SEVERITY:
        return getSeverity();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case NgtPackage.QUALITY_RISK__IMPORTANCE:
        setImportance((Integer)newValue);
        return;
      case NgtPackage.QUALITY_RISK__SEVERITY:
        setSeverity((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case NgtPackage.QUALITY_RISK__IMPORTANCE:
        setImportance(IMPORTANCE_EDEFAULT);
        return;
      case NgtPackage.QUALITY_RISK__SEVERITY:
        setSeverity(SEVERITY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case NgtPackage.QUALITY_RISK__IMPORTANCE:
        return importance != IMPORTANCE_EDEFAULT;
      case NgtPackage.QUALITY_RISK__SEVERITY:
        return severity != SEVERITY_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (importance: ");
    result.append(importance);
    result.append(", severity: ");
    result.append(severity);
    result.append(')');
    return result.toString();
  }

} //QualityRiskImpl

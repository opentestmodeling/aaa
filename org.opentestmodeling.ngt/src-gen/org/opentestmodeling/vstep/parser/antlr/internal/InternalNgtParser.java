package org.opentestmodeling.vstep.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.opentestmodeling.vstep.services.NgtGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalNgtParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_STEREOTYPE_STRING", "RULE_INT", "RULE_ESCAPED_STEREOTYPE_CHAR", "RULE_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'('", "')'", "'['", "','", "']'", "'<|-'", "'-'", "'<-'", "'importance='", "'severity='", "'container'", "'{'", "'}'"
    };
    public static final int RULE_STEREOTYPE_STRING=5;
    public static final int RULE_STRING=4;
    public static final int RULE_SL_COMMENT=10;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int EOF=-1;
    public static final int RULE_ID=8;
    public static final int RULE_WS=11;
    public static final int RULE_ANY_OTHER=12;
    public static final int RULE_INT=6;
    public static final int T__22=22;
    public static final int RULE_ML_COMMENT=9;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int RULE_ESCAPED_STEREOTYPE_CHAR=7;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;

    // delegates
    // delegators


        public InternalNgtParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalNgtParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalNgtParser.tokenNames; }
    public String getGrammarFileName() { return "InternalNgt.g"; }



     	private NgtGrammarAccess grammarAccess;

        public InternalNgtParser(TokenStream input, NgtGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected NgtGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalNgt.g:64:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalNgt.g:64:46: (iv_ruleModel= ruleModel EOF )
            // InternalNgt.g:65:2: iv_ruleModel= ruleModel EOF
            {
             newCompositeNode(grammarAccess.getModelRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;

             current =iv_ruleModel; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalNgt.g:71:1: ruleModel returns [EObject current=null] : ( ( (lv_testTargets_0_1= ruleTestNode | lv_testTargets_0_2= ruleChain | lv_testTargets_0_3= ruleTestContainer ) ) )* ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_testTargets_0_1 = null;

        EObject lv_testTargets_0_2 = null;

        EObject lv_testTargets_0_3 = null;



        	enterRule();

        try {
            // InternalNgt.g:77:2: ( ( ( (lv_testTargets_0_1= ruleTestNode | lv_testTargets_0_2= ruleChain | lv_testTargets_0_3= ruleTestContainer ) ) )* )
            // InternalNgt.g:78:2: ( ( (lv_testTargets_0_1= ruleTestNode | lv_testTargets_0_2= ruleChain | lv_testTargets_0_3= ruleTestContainer ) ) )*
            {
            // InternalNgt.g:78:2: ( ( (lv_testTargets_0_1= ruleTestNode | lv_testTargets_0_2= ruleChain | lv_testTargets_0_3= ruleTestContainer ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==13||LA2_0==15||LA2_0==23) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalNgt.g:79:3: ( (lv_testTargets_0_1= ruleTestNode | lv_testTargets_0_2= ruleChain | lv_testTargets_0_3= ruleTestContainer ) )
            	    {
            	    // InternalNgt.g:79:3: ( (lv_testTargets_0_1= ruleTestNode | lv_testTargets_0_2= ruleChain | lv_testTargets_0_3= ruleTestContainer ) )
            	    // InternalNgt.g:80:4: (lv_testTargets_0_1= ruleTestNode | lv_testTargets_0_2= ruleChain | lv_testTargets_0_3= ruleTestContainer )
            	    {
            	    // InternalNgt.g:80:4: (lv_testTargets_0_1= ruleTestNode | lv_testTargets_0_2= ruleChain | lv_testTargets_0_3= ruleTestContainer )
            	    int alt1=3;
            	    alt1 = dfa1.predict(input);
            	    switch (alt1) {
            	        case 1 :
            	            // InternalNgt.g:81:5: lv_testTargets_0_1= ruleTestNode
            	            {

            	            					newCompositeNode(grammarAccess.getModelAccess().getTestTargetsTestNodeParserRuleCall_0_0());
            	            				
            	            pushFollow(FOLLOW_3);
            	            lv_testTargets_0_1=ruleTestNode();

            	            state._fsp--;


            	            					if (current==null) {
            	            						current = createModelElementForParent(grammarAccess.getModelRule());
            	            					}
            	            					add(
            	            						current,
            	            						"testTargets",
            	            						lv_testTargets_0_1,
            	            						"org.opentestmodeling.vstep.Ngt.TestNode");
            	            					afterParserOrEnumRuleCall();
            	            				

            	            }
            	            break;
            	        case 2 :
            	            // InternalNgt.g:97:5: lv_testTargets_0_2= ruleChain
            	            {

            	            					newCompositeNode(grammarAccess.getModelAccess().getTestTargetsChainParserRuleCall_0_1());
            	            				
            	            pushFollow(FOLLOW_3);
            	            lv_testTargets_0_2=ruleChain();

            	            state._fsp--;


            	            					if (current==null) {
            	            						current = createModelElementForParent(grammarAccess.getModelRule());
            	            					}
            	            					add(
            	            						current,
            	            						"testTargets",
            	            						lv_testTargets_0_2,
            	            						"org.opentestmodeling.vstep.Ngt.Chain");
            	            					afterParserOrEnumRuleCall();
            	            				

            	            }
            	            break;
            	        case 3 :
            	            // InternalNgt.g:113:5: lv_testTargets_0_3= ruleTestContainer
            	            {

            	            					newCompositeNode(grammarAccess.getModelAccess().getTestTargetsTestContainerParserRuleCall_0_2());
            	            				
            	            pushFollow(FOLLOW_3);
            	            lv_testTargets_0_3=ruleTestContainer();

            	            state._fsp--;


            	            					if (current==null) {
            	            						current = createModelElementForParent(grammarAccess.getModelRule());
            	            					}
            	            					add(
            	            						current,
            	            						"testTargets",
            	            						lv_testTargets_0_3,
            	            						"org.opentestmodeling.vstep.Ngt.TestContainer");
            	            					afterParserOrEnumRuleCall();
            	            				

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleTestNode"
    // InternalNgt.g:134:1: entryRuleTestNode returns [EObject current=null] : iv_ruleTestNode= ruleTestNode EOF ;
    public final EObject entryRuleTestNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestNode = null;


        try {
            // InternalNgt.g:134:49: (iv_ruleTestNode= ruleTestNode EOF )
            // InternalNgt.g:135:2: iv_ruleTestNode= ruleTestNode EOF
            {
             newCompositeNode(grammarAccess.getTestNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTestNode=ruleTestNode();

            state._fsp--;

             current =iv_ruleTestNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestNode"


    // $ANTLR start "ruleTestNode"
    // InternalNgt.g:141:1: ruleTestNode returns [EObject current=null] : (this_TestTarget_0= ruleTestTarget | this_TestViewpoint_1= ruleTestViewpoint ) ;
    public final EObject ruleTestNode() throws RecognitionException {
        EObject current = null;

        EObject this_TestTarget_0 = null;

        EObject this_TestViewpoint_1 = null;



        	enterRule();

        try {
            // InternalNgt.g:147:2: ( (this_TestTarget_0= ruleTestTarget | this_TestViewpoint_1= ruleTestViewpoint ) )
            // InternalNgt.g:148:2: (this_TestTarget_0= ruleTestTarget | this_TestViewpoint_1= ruleTestViewpoint )
            {
            // InternalNgt.g:148:2: (this_TestTarget_0= ruleTestTarget | this_TestViewpoint_1= ruleTestViewpoint )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==13) ) {
                alt3=1;
            }
            else if ( (LA3_0==15) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalNgt.g:149:3: this_TestTarget_0= ruleTestTarget
                    {

                    			newCompositeNode(grammarAccess.getTestNodeAccess().getTestTargetParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_TestTarget_0=ruleTestTarget();

                    state._fsp--;


                    			current = this_TestTarget_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalNgt.g:158:3: this_TestViewpoint_1= ruleTestViewpoint
                    {

                    			newCompositeNode(grammarAccess.getTestNodeAccess().getTestViewpointParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_TestViewpoint_1=ruleTestViewpoint();

                    state._fsp--;


                    			current = this_TestViewpoint_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestNode"


    // $ANTLR start "entryRuleTestTarget"
    // InternalNgt.g:170:1: entryRuleTestTarget returns [EObject current=null] : iv_ruleTestTarget= ruleTestTarget EOF ;
    public final EObject entryRuleTestTarget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestTarget = null;


        try {
            // InternalNgt.g:170:51: (iv_ruleTestTarget= ruleTestTarget EOF )
            // InternalNgt.g:171:2: iv_ruleTestTarget= ruleTestTarget EOF
            {
             newCompositeNode(grammarAccess.getTestTargetRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTestTarget=ruleTestTarget();

            state._fsp--;

             current =iv_ruleTestTarget; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestTarget"


    // $ANTLR start "ruleTestTarget"
    // InternalNgt.g:177:1: ruleTestTarget returns [EObject current=null] : (otherlv_0= '(' ( (lv_name_1_0= RULE_STRING ) ) otherlv_2= ')' ( (lv_stereotype_3_0= RULE_STEREOTYPE_STRING ) )? ) ;
    public final EObject ruleTestTarget() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token lv_stereotype_3_0=null;


        	enterRule();

        try {
            // InternalNgt.g:183:2: ( (otherlv_0= '(' ( (lv_name_1_0= RULE_STRING ) ) otherlv_2= ')' ( (lv_stereotype_3_0= RULE_STEREOTYPE_STRING ) )? ) )
            // InternalNgt.g:184:2: (otherlv_0= '(' ( (lv_name_1_0= RULE_STRING ) ) otherlv_2= ')' ( (lv_stereotype_3_0= RULE_STEREOTYPE_STRING ) )? )
            {
            // InternalNgt.g:184:2: (otherlv_0= '(' ( (lv_name_1_0= RULE_STRING ) ) otherlv_2= ')' ( (lv_stereotype_3_0= RULE_STEREOTYPE_STRING ) )? )
            // InternalNgt.g:185:3: otherlv_0= '(' ( (lv_name_1_0= RULE_STRING ) ) otherlv_2= ')' ( (lv_stereotype_3_0= RULE_STEREOTYPE_STRING ) )?
            {
            otherlv_0=(Token)match(input,13,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getTestTargetAccess().getLeftParenthesisKeyword_0());
            		
            // InternalNgt.g:189:3: ( (lv_name_1_0= RULE_STRING ) )
            // InternalNgt.g:190:4: (lv_name_1_0= RULE_STRING )
            {
            // InternalNgt.g:190:4: (lv_name_1_0= RULE_STRING )
            // InternalNgt.g:191:5: lv_name_1_0= RULE_STRING
            {
            lv_name_1_0=(Token)match(input,RULE_STRING,FOLLOW_5); 

            					newLeafNode(lv_name_1_0, grammarAccess.getTestTargetAccess().getNameSTRINGTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getTestTargetRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.eclipse.xtext.common.Terminals.STRING");
            				

            }


            }

            otherlv_2=(Token)match(input,14,FOLLOW_6); 

            			newLeafNode(otherlv_2, grammarAccess.getTestTargetAccess().getRightParenthesisKeyword_2());
            		
            // InternalNgt.g:211:3: ( (lv_stereotype_3_0= RULE_STEREOTYPE_STRING ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==RULE_STEREOTYPE_STRING) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalNgt.g:212:4: (lv_stereotype_3_0= RULE_STEREOTYPE_STRING )
                    {
                    // InternalNgt.g:212:4: (lv_stereotype_3_0= RULE_STEREOTYPE_STRING )
                    // InternalNgt.g:213:5: lv_stereotype_3_0= RULE_STEREOTYPE_STRING
                    {
                    lv_stereotype_3_0=(Token)match(input,RULE_STEREOTYPE_STRING,FOLLOW_2); 

                    					newLeafNode(lv_stereotype_3_0, grammarAccess.getTestTargetAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_3_0());
                    				

                    					if (current==null) {
                    						current = createModelElement(grammarAccess.getTestTargetRule());
                    					}
                    					setWithLastConsumed(
                    						current,
                    						"stereotype",
                    						lv_stereotype_3_0,
                    						"org.opentestmodeling.vstep.Ngt.STEREOTYPE_STRING");
                    				

                    }


                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestTarget"


    // $ANTLR start "entryRuleTestViewpoint"
    // InternalNgt.g:233:1: entryRuleTestViewpoint returns [EObject current=null] : iv_ruleTestViewpoint= ruleTestViewpoint EOF ;
    public final EObject entryRuleTestViewpoint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestViewpoint = null;


        try {
            // InternalNgt.g:233:54: (iv_ruleTestViewpoint= ruleTestViewpoint EOF )
            // InternalNgt.g:234:2: iv_ruleTestViewpoint= ruleTestViewpoint EOF
            {
             newCompositeNode(grammarAccess.getTestViewpointRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTestViewpoint=ruleTestViewpoint();

            state._fsp--;

             current =iv_ruleTestViewpoint; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestViewpoint"


    // $ANTLR start "ruleTestViewpoint"
    // InternalNgt.g:240:1: ruleTestViewpoint returns [EObject current=null] : (otherlv_0= '[' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= ',' ( (lv_testItems_3_0= ruleStringList ) ) )? (otherlv_4= ',' ( (lv_qualityRisk_5_0= ruleQualityRisk ) ) )? (otherlv_6= ',' ( (lv_coverage_7_0= RULE_STRING ) ) )? otherlv_8= ']' ( (lv_stereotype_9_0= RULE_STEREOTYPE_STRING ) )? ) ;
    public final EObject ruleTestViewpoint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token lv_coverage_7_0=null;
        Token otherlv_8=null;
        Token lv_stereotype_9_0=null;
        EObject lv_testItems_3_0 = null;

        EObject lv_qualityRisk_5_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:246:2: ( (otherlv_0= '[' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= ',' ( (lv_testItems_3_0= ruleStringList ) ) )? (otherlv_4= ',' ( (lv_qualityRisk_5_0= ruleQualityRisk ) ) )? (otherlv_6= ',' ( (lv_coverage_7_0= RULE_STRING ) ) )? otherlv_8= ']' ( (lv_stereotype_9_0= RULE_STEREOTYPE_STRING ) )? ) )
            // InternalNgt.g:247:2: (otherlv_0= '[' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= ',' ( (lv_testItems_3_0= ruleStringList ) ) )? (otherlv_4= ',' ( (lv_qualityRisk_5_0= ruleQualityRisk ) ) )? (otherlv_6= ',' ( (lv_coverage_7_0= RULE_STRING ) ) )? otherlv_8= ']' ( (lv_stereotype_9_0= RULE_STEREOTYPE_STRING ) )? )
            {
            // InternalNgt.g:247:2: (otherlv_0= '[' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= ',' ( (lv_testItems_3_0= ruleStringList ) ) )? (otherlv_4= ',' ( (lv_qualityRisk_5_0= ruleQualityRisk ) ) )? (otherlv_6= ',' ( (lv_coverage_7_0= RULE_STRING ) ) )? otherlv_8= ']' ( (lv_stereotype_9_0= RULE_STEREOTYPE_STRING ) )? )
            // InternalNgt.g:248:3: otherlv_0= '[' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= ',' ( (lv_testItems_3_0= ruleStringList ) ) )? (otherlv_4= ',' ( (lv_qualityRisk_5_0= ruleQualityRisk ) ) )? (otherlv_6= ',' ( (lv_coverage_7_0= RULE_STRING ) ) )? otherlv_8= ']' ( (lv_stereotype_9_0= RULE_STEREOTYPE_STRING ) )?
            {
            otherlv_0=(Token)match(input,15,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getTestViewpointAccess().getLeftSquareBracketKeyword_0());
            		
            // InternalNgt.g:252:3: ( (lv_name_1_0= RULE_STRING ) )
            // InternalNgt.g:253:4: (lv_name_1_0= RULE_STRING )
            {
            // InternalNgt.g:253:4: (lv_name_1_0= RULE_STRING )
            // InternalNgt.g:254:5: lv_name_1_0= RULE_STRING
            {
            lv_name_1_0=(Token)match(input,RULE_STRING,FOLLOW_7); 

            					newLeafNode(lv_name_1_0, grammarAccess.getTestViewpointAccess().getNameSTRINGTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getTestViewpointRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.eclipse.xtext.common.Terminals.STRING");
            				

            }


            }

            // InternalNgt.g:270:3: (otherlv_2= ',' ( (lv_testItems_3_0= ruleStringList ) ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==16) ) {
                int LA5_1 = input.LA(2);

                if ( (LA5_1==15) ) {
                    int LA5_3 = input.LA(3);

                    if ( (LA5_3==RULE_STRING||LA5_3==RULE_INT||LA5_3==17) ) {
                        alt5=1;
                    }
                }
            }
            switch (alt5) {
                case 1 :
                    // InternalNgt.g:271:4: otherlv_2= ',' ( (lv_testItems_3_0= ruleStringList ) )
                    {
                    otherlv_2=(Token)match(input,16,FOLLOW_8); 

                    				newLeafNode(otherlv_2, grammarAccess.getTestViewpointAccess().getCommaKeyword_2_0());
                    			
                    // InternalNgt.g:275:4: ( (lv_testItems_3_0= ruleStringList ) )
                    // InternalNgt.g:276:5: (lv_testItems_3_0= ruleStringList )
                    {
                    // InternalNgt.g:276:5: (lv_testItems_3_0= ruleStringList )
                    // InternalNgt.g:277:6: lv_testItems_3_0= ruleStringList
                    {

                    						newCompositeNode(grammarAccess.getTestViewpointAccess().getTestItemsStringListParserRuleCall_2_1_0());
                    					
                    pushFollow(FOLLOW_7);
                    lv_testItems_3_0=ruleStringList();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getTestViewpointRule());
                    						}
                    						set(
                    							current,
                    							"testItems",
                    							lv_testItems_3_0,
                    							"org.opentestmodeling.vstep.Ngt.StringList");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalNgt.g:295:3: (otherlv_4= ',' ( (lv_qualityRisk_5_0= ruleQualityRisk ) ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==16) ) {
                int LA6_1 = input.LA(2);

                if ( (LA6_1==15) ) {
                    alt6=1;
                }
            }
            switch (alt6) {
                case 1 :
                    // InternalNgt.g:296:4: otherlv_4= ',' ( (lv_qualityRisk_5_0= ruleQualityRisk ) )
                    {
                    otherlv_4=(Token)match(input,16,FOLLOW_8); 

                    				newLeafNode(otherlv_4, grammarAccess.getTestViewpointAccess().getCommaKeyword_3_0());
                    			
                    // InternalNgt.g:300:4: ( (lv_qualityRisk_5_0= ruleQualityRisk ) )
                    // InternalNgt.g:301:5: (lv_qualityRisk_5_0= ruleQualityRisk )
                    {
                    // InternalNgt.g:301:5: (lv_qualityRisk_5_0= ruleQualityRisk )
                    // InternalNgt.g:302:6: lv_qualityRisk_5_0= ruleQualityRisk
                    {

                    						newCompositeNode(grammarAccess.getTestViewpointAccess().getQualityRiskQualityRiskParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_7);
                    lv_qualityRisk_5_0=ruleQualityRisk();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getTestViewpointRule());
                    						}
                    						set(
                    							current,
                    							"qualityRisk",
                    							lv_qualityRisk_5_0,
                    							"org.opentestmodeling.vstep.Ngt.QualityRisk");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }


                    }
                    break;

            }

            // InternalNgt.g:320:3: (otherlv_6= ',' ( (lv_coverage_7_0= RULE_STRING ) ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==16) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalNgt.g:321:4: otherlv_6= ',' ( (lv_coverage_7_0= RULE_STRING ) )
                    {
                    otherlv_6=(Token)match(input,16,FOLLOW_4); 

                    				newLeafNode(otherlv_6, grammarAccess.getTestViewpointAccess().getCommaKeyword_4_0());
                    			
                    // InternalNgt.g:325:4: ( (lv_coverage_7_0= RULE_STRING ) )
                    // InternalNgt.g:326:5: (lv_coverage_7_0= RULE_STRING )
                    {
                    // InternalNgt.g:326:5: (lv_coverage_7_0= RULE_STRING )
                    // InternalNgt.g:327:6: lv_coverage_7_0= RULE_STRING
                    {
                    lv_coverage_7_0=(Token)match(input,RULE_STRING,FOLLOW_9); 

                    						newLeafNode(lv_coverage_7_0, grammarAccess.getTestViewpointAccess().getCoverageSTRINGTerminalRuleCall_4_1_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getTestViewpointRule());
                    						}
                    						setWithLastConsumed(
                    							current,
                    							"coverage",
                    							lv_coverage_7_0,
                    							"org.eclipse.xtext.common.Terminals.STRING");
                    					

                    }


                    }


                    }
                    break;

            }

            otherlv_8=(Token)match(input,17,FOLLOW_6); 

            			newLeafNode(otherlv_8, grammarAccess.getTestViewpointAccess().getRightSquareBracketKeyword_5());
            		
            // InternalNgt.g:348:3: ( (lv_stereotype_9_0= RULE_STEREOTYPE_STRING ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==RULE_STEREOTYPE_STRING) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalNgt.g:349:4: (lv_stereotype_9_0= RULE_STEREOTYPE_STRING )
                    {
                    // InternalNgt.g:349:4: (lv_stereotype_9_0= RULE_STEREOTYPE_STRING )
                    // InternalNgt.g:350:5: lv_stereotype_9_0= RULE_STEREOTYPE_STRING
                    {
                    lv_stereotype_9_0=(Token)match(input,RULE_STEREOTYPE_STRING,FOLLOW_2); 

                    					newLeafNode(lv_stereotype_9_0, grammarAccess.getTestViewpointAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_6_0());
                    				

                    					if (current==null) {
                    						current = createModelElement(grammarAccess.getTestViewpointRule());
                    					}
                    					setWithLastConsumed(
                    						current,
                    						"stereotype",
                    						lv_stereotype_9_0,
                    						"org.opentestmodeling.vstep.Ngt.STEREOTYPE_STRING");
                    				

                    }


                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestViewpoint"


    // $ANTLR start "entryRuleNodeConnection"
    // InternalNgt.g:370:1: entryRuleNodeConnection returns [EObject current=null] : iv_ruleNodeConnection= ruleNodeConnection EOF ;
    public final EObject entryRuleNodeConnection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNodeConnection = null;


        try {
            // InternalNgt.g:370:55: (iv_ruleNodeConnection= ruleNodeConnection EOF )
            // InternalNgt.g:371:2: iv_ruleNodeConnection= ruleNodeConnection EOF
            {
             newCompositeNode(grammarAccess.getNodeConnectionRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleNodeConnection=ruleNodeConnection();

            state._fsp--;

             current =iv_ruleNodeConnection; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNodeConnection"


    // $ANTLR start "ruleNodeConnection"
    // InternalNgt.g:377:1: ruleNodeConnection returns [EObject current=null] : (this_Inheritance_0= ruleInheritance | this_Relation_1= ruleRelation | this_Dependency_2= ruleDependency ) ;
    public final EObject ruleNodeConnection() throws RecognitionException {
        EObject current = null;

        EObject this_Inheritance_0 = null;

        EObject this_Relation_1 = null;

        EObject this_Dependency_2 = null;



        	enterRule();

        try {
            // InternalNgt.g:383:2: ( (this_Inheritance_0= ruleInheritance | this_Relation_1= ruleRelation | this_Dependency_2= ruleDependency ) )
            // InternalNgt.g:384:2: (this_Inheritance_0= ruleInheritance | this_Relation_1= ruleRelation | this_Dependency_2= ruleDependency )
            {
            // InternalNgt.g:384:2: (this_Inheritance_0= ruleInheritance | this_Relation_1= ruleRelation | this_Dependency_2= ruleDependency )
            int alt9=3;
            switch ( input.LA(1) ) {
            case 18:
                {
                alt9=1;
                }
                break;
            case 19:
                {
                alt9=2;
                }
                break;
            case 20:
                {
                alt9=3;
                }
                break;
            default:
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // InternalNgt.g:385:3: this_Inheritance_0= ruleInheritance
                    {

                    			newCompositeNode(grammarAccess.getNodeConnectionAccess().getInheritanceParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_Inheritance_0=ruleInheritance();

                    state._fsp--;


                    			current = this_Inheritance_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalNgt.g:394:3: this_Relation_1= ruleRelation
                    {

                    			newCompositeNode(grammarAccess.getNodeConnectionAccess().getRelationParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_Relation_1=ruleRelation();

                    state._fsp--;


                    			current = this_Relation_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 3 :
                    // InternalNgt.g:403:3: this_Dependency_2= ruleDependency
                    {

                    			newCompositeNode(grammarAccess.getNodeConnectionAccess().getDependencyParserRuleCall_2());
                    		
                    pushFollow(FOLLOW_2);
                    this_Dependency_2=ruleDependency();

                    state._fsp--;


                    			current = this_Dependency_2;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNodeConnection"


    // $ANTLR start "entryRuleInheritance"
    // InternalNgt.g:415:1: entryRuleInheritance returns [EObject current=null] : iv_ruleInheritance= ruleInheritance EOF ;
    public final EObject entryRuleInheritance() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInheritance = null;


        try {
            // InternalNgt.g:415:52: (iv_ruleInheritance= ruleInheritance EOF )
            // InternalNgt.g:416:2: iv_ruleInheritance= ruleInheritance EOF
            {
             newCompositeNode(grammarAccess.getInheritanceRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleInheritance=ruleInheritance();

            state._fsp--;

             current =iv_ruleInheritance; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInheritance"


    // $ANTLR start "ruleInheritance"
    // InternalNgt.g:422:1: ruleInheritance returns [EObject current=null] : (otherlv_0= '<|-' ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )? otherlv_2= '-' ( (lv_source_3_0= ruleTestNode ) ) ) ;
    public final EObject ruleInheritance() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_stereotype_1_0=null;
        Token otherlv_2=null;
        EObject lv_source_3_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:428:2: ( (otherlv_0= '<|-' ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )? otherlv_2= '-' ( (lv_source_3_0= ruleTestNode ) ) ) )
            // InternalNgt.g:429:2: (otherlv_0= '<|-' ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )? otherlv_2= '-' ( (lv_source_3_0= ruleTestNode ) ) )
            {
            // InternalNgt.g:429:2: (otherlv_0= '<|-' ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )? otherlv_2= '-' ( (lv_source_3_0= ruleTestNode ) ) )
            // InternalNgt.g:430:3: otherlv_0= '<|-' ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )? otherlv_2= '-' ( (lv_source_3_0= ruleTestNode ) )
            {
            otherlv_0=(Token)match(input,18,FOLLOW_10); 

            			newLeafNode(otherlv_0, grammarAccess.getInheritanceAccess().getLessThanSignVerticalLineHyphenMinusKeyword_0());
            		
            // InternalNgt.g:434:3: ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_STEREOTYPE_STRING) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalNgt.g:435:4: (lv_stereotype_1_0= RULE_STEREOTYPE_STRING )
                    {
                    // InternalNgt.g:435:4: (lv_stereotype_1_0= RULE_STEREOTYPE_STRING )
                    // InternalNgt.g:436:5: lv_stereotype_1_0= RULE_STEREOTYPE_STRING
                    {
                    lv_stereotype_1_0=(Token)match(input,RULE_STEREOTYPE_STRING,FOLLOW_11); 

                    					newLeafNode(lv_stereotype_1_0, grammarAccess.getInheritanceAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_1_0());
                    				

                    					if (current==null) {
                    						current = createModelElement(grammarAccess.getInheritanceRule());
                    					}
                    					setWithLastConsumed(
                    						current,
                    						"stereotype",
                    						lv_stereotype_1_0,
                    						"org.opentestmodeling.vstep.Ngt.STEREOTYPE_STRING");
                    				

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,19,FOLLOW_12); 

            			newLeafNode(otherlv_2, grammarAccess.getInheritanceAccess().getHyphenMinusKeyword_2());
            		
            // InternalNgt.g:456:3: ( (lv_source_3_0= ruleTestNode ) )
            // InternalNgt.g:457:4: (lv_source_3_0= ruleTestNode )
            {
            // InternalNgt.g:457:4: (lv_source_3_0= ruleTestNode )
            // InternalNgt.g:458:5: lv_source_3_0= ruleTestNode
            {

            					newCompositeNode(grammarAccess.getInheritanceAccess().getSourceTestNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_2);
            lv_source_3_0=ruleTestNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getInheritanceRule());
            					}
            					set(
            						current,
            						"source",
            						lv_source_3_0,
            						"org.opentestmodeling.vstep.Ngt.TestNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInheritance"


    // $ANTLR start "entryRuleRelation"
    // InternalNgt.g:479:1: entryRuleRelation returns [EObject current=null] : iv_ruleRelation= ruleRelation EOF ;
    public final EObject entryRuleRelation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelation = null;


        try {
            // InternalNgt.g:479:49: (iv_ruleRelation= ruleRelation EOF )
            // InternalNgt.g:480:2: iv_ruleRelation= ruleRelation EOF
            {
             newCompositeNode(grammarAccess.getRelationRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRelation=ruleRelation();

            state._fsp--;

             current =iv_ruleRelation; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelation"


    // $ANTLR start "ruleRelation"
    // InternalNgt.g:486:1: ruleRelation returns [EObject current=null] : (otherlv_0= '-' ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )? otherlv_2= '-' ( (lv_source_3_0= ruleTestNode ) ) ) ;
    public final EObject ruleRelation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_stereotype_1_0=null;
        Token otherlv_2=null;
        EObject lv_source_3_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:492:2: ( (otherlv_0= '-' ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )? otherlv_2= '-' ( (lv_source_3_0= ruleTestNode ) ) ) )
            // InternalNgt.g:493:2: (otherlv_0= '-' ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )? otherlv_2= '-' ( (lv_source_3_0= ruleTestNode ) ) )
            {
            // InternalNgt.g:493:2: (otherlv_0= '-' ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )? otherlv_2= '-' ( (lv_source_3_0= ruleTestNode ) ) )
            // InternalNgt.g:494:3: otherlv_0= '-' ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )? otherlv_2= '-' ( (lv_source_3_0= ruleTestNode ) )
            {
            otherlv_0=(Token)match(input,19,FOLLOW_10); 

            			newLeafNode(otherlv_0, grammarAccess.getRelationAccess().getHyphenMinusKeyword_0());
            		
            // InternalNgt.g:498:3: ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_STEREOTYPE_STRING) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalNgt.g:499:4: (lv_stereotype_1_0= RULE_STEREOTYPE_STRING )
                    {
                    // InternalNgt.g:499:4: (lv_stereotype_1_0= RULE_STEREOTYPE_STRING )
                    // InternalNgt.g:500:5: lv_stereotype_1_0= RULE_STEREOTYPE_STRING
                    {
                    lv_stereotype_1_0=(Token)match(input,RULE_STEREOTYPE_STRING,FOLLOW_11); 

                    					newLeafNode(lv_stereotype_1_0, grammarAccess.getRelationAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_1_0());
                    				

                    					if (current==null) {
                    						current = createModelElement(grammarAccess.getRelationRule());
                    					}
                    					setWithLastConsumed(
                    						current,
                    						"stereotype",
                    						lv_stereotype_1_0,
                    						"org.opentestmodeling.vstep.Ngt.STEREOTYPE_STRING");
                    				

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,19,FOLLOW_12); 

            			newLeafNode(otherlv_2, grammarAccess.getRelationAccess().getHyphenMinusKeyword_2());
            		
            // InternalNgt.g:520:3: ( (lv_source_3_0= ruleTestNode ) )
            // InternalNgt.g:521:4: (lv_source_3_0= ruleTestNode )
            {
            // InternalNgt.g:521:4: (lv_source_3_0= ruleTestNode )
            // InternalNgt.g:522:5: lv_source_3_0= ruleTestNode
            {

            					newCompositeNode(grammarAccess.getRelationAccess().getSourceTestNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_2);
            lv_source_3_0=ruleTestNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getRelationRule());
            					}
            					set(
            						current,
            						"source",
            						lv_source_3_0,
            						"org.opentestmodeling.vstep.Ngt.TestNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelation"


    // $ANTLR start "entryRuleDependency"
    // InternalNgt.g:543:1: entryRuleDependency returns [EObject current=null] : iv_ruleDependency= ruleDependency EOF ;
    public final EObject entryRuleDependency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependency = null;


        try {
            // InternalNgt.g:543:51: (iv_ruleDependency= ruleDependency EOF )
            // InternalNgt.g:544:2: iv_ruleDependency= ruleDependency EOF
            {
             newCompositeNode(grammarAccess.getDependencyRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleDependency=ruleDependency();

            state._fsp--;

             current =iv_ruleDependency; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // InternalNgt.g:550:1: ruleDependency returns [EObject current=null] : (otherlv_0= '<-' ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )? otherlv_2= '-' ( (lv_source_3_0= ruleTestNode ) ) ) ;
    public final EObject ruleDependency() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_stereotype_1_0=null;
        Token otherlv_2=null;
        EObject lv_source_3_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:556:2: ( (otherlv_0= '<-' ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )? otherlv_2= '-' ( (lv_source_3_0= ruleTestNode ) ) ) )
            // InternalNgt.g:557:2: (otherlv_0= '<-' ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )? otherlv_2= '-' ( (lv_source_3_0= ruleTestNode ) ) )
            {
            // InternalNgt.g:557:2: (otherlv_0= '<-' ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )? otherlv_2= '-' ( (lv_source_3_0= ruleTestNode ) ) )
            // InternalNgt.g:558:3: otherlv_0= '<-' ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )? otherlv_2= '-' ( (lv_source_3_0= ruleTestNode ) )
            {
            otherlv_0=(Token)match(input,20,FOLLOW_10); 

            			newLeafNode(otherlv_0, grammarAccess.getDependencyAccess().getLessThanSignHyphenMinusKeyword_0());
            		
            // InternalNgt.g:562:3: ( (lv_stereotype_1_0= RULE_STEREOTYPE_STRING ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_STEREOTYPE_STRING) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // InternalNgt.g:563:4: (lv_stereotype_1_0= RULE_STEREOTYPE_STRING )
                    {
                    // InternalNgt.g:563:4: (lv_stereotype_1_0= RULE_STEREOTYPE_STRING )
                    // InternalNgt.g:564:5: lv_stereotype_1_0= RULE_STEREOTYPE_STRING
                    {
                    lv_stereotype_1_0=(Token)match(input,RULE_STEREOTYPE_STRING,FOLLOW_11); 

                    					newLeafNode(lv_stereotype_1_0, grammarAccess.getDependencyAccess().getStereotypeSTEREOTYPE_STRINGTerminalRuleCall_1_0());
                    				

                    					if (current==null) {
                    						current = createModelElement(grammarAccess.getDependencyRule());
                    					}
                    					setWithLastConsumed(
                    						current,
                    						"stereotype",
                    						lv_stereotype_1_0,
                    						"org.opentestmodeling.vstep.Ngt.STEREOTYPE_STRING");
                    				

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,19,FOLLOW_12); 

            			newLeafNode(otherlv_2, grammarAccess.getDependencyAccess().getHyphenMinusKeyword_2());
            		
            // InternalNgt.g:584:3: ( (lv_source_3_0= ruleTestNode ) )
            // InternalNgt.g:585:4: (lv_source_3_0= ruleTestNode )
            {
            // InternalNgt.g:585:4: (lv_source_3_0= ruleTestNode )
            // InternalNgt.g:586:5: lv_source_3_0= ruleTestNode
            {

            					newCompositeNode(grammarAccess.getDependencyAccess().getSourceTestNodeParserRuleCall_3_0());
            				
            pushFollow(FOLLOW_2);
            lv_source_3_0=ruleTestNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getDependencyRule());
            					}
            					set(
            						current,
            						"source",
            						lv_source_3_0,
            						"org.opentestmodeling.vstep.Ngt.TestNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleChain"
    // InternalNgt.g:607:1: entryRuleChain returns [EObject current=null] : iv_ruleChain= ruleChain EOF ;
    public final EObject entryRuleChain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChain = null;


        try {
            // InternalNgt.g:607:46: (iv_ruleChain= ruleChain EOF )
            // InternalNgt.g:608:2: iv_ruleChain= ruleChain EOF
            {
             newCompositeNode(grammarAccess.getChainRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleChain=ruleChain();

            state._fsp--;

             current =iv_ruleChain; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChain"


    // $ANTLR start "ruleChain"
    // InternalNgt.g:614:1: ruleChain returns [EObject current=null] : (this_TargetChain_0= ruleTargetChain | this_NodeChain_1= ruleNodeChain ) ;
    public final EObject ruleChain() throws RecognitionException {
        EObject current = null;

        EObject this_TargetChain_0 = null;

        EObject this_NodeChain_1 = null;



        	enterRule();

        try {
            // InternalNgt.g:620:2: ( (this_TargetChain_0= ruleTargetChain | this_NodeChain_1= ruleNodeChain ) )
            // InternalNgt.g:621:2: (this_TargetChain_0= ruleTargetChain | this_NodeChain_1= ruleNodeChain )
            {
            // InternalNgt.g:621:2: (this_TargetChain_0= ruleTargetChain | this_NodeChain_1= ruleNodeChain )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==13) ) {
                int LA13_1 = input.LA(2);

                if ( (LA13_1==RULE_STRING) ) {
                    int LA13_3 = input.LA(3);

                    if ( (LA13_3==14) ) {
                        switch ( input.LA(4) ) {
                        case RULE_STEREOTYPE_STRING:
                            {
                            int LA13_5 = input.LA(5);

                            if ( (LA13_5==18) ) {
                                alt13=1;
                            }
                            else if ( ((LA13_5>=19 && LA13_5<=20)) ) {
                                alt13=2;
                            }
                            else {
                                NoViableAltException nvae =
                                    new NoViableAltException("", 13, 5, input);

                                throw nvae;
                            }
                            }
                            break;
                        case 18:
                            {
                            alt13=1;
                            }
                            break;
                        case 19:
                        case 20:
                            {
                            alt13=2;
                            }
                            break;
                        default:
                            NoViableAltException nvae =
                                new NoViableAltException("", 13, 4, input);

                            throw nvae;
                        }

                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 13, 3, input);

                        throw nvae;
                    }
                }
                else {
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA13_0==15) ) {
                alt13=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalNgt.g:622:3: this_TargetChain_0= ruleTargetChain
                    {

                    			newCompositeNode(grammarAccess.getChainAccess().getTargetChainParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_TargetChain_0=ruleTargetChain();

                    state._fsp--;


                    			current = this_TargetChain_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalNgt.g:631:3: this_NodeChain_1= ruleNodeChain
                    {

                    			newCompositeNode(grammarAccess.getChainAccess().getNodeChainParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_NodeChain_1=ruleNodeChain();

                    state._fsp--;


                    			current = this_NodeChain_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChain"


    // $ANTLR start "entryRuleTargetChain"
    // InternalNgt.g:643:1: entryRuleTargetChain returns [EObject current=null] : iv_ruleTargetChain= ruleTargetChain EOF ;
    public final EObject entryRuleTargetChain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTargetChain = null;


        try {
            // InternalNgt.g:643:52: (iv_ruleTargetChain= ruleTargetChain EOF )
            // InternalNgt.g:644:2: iv_ruleTargetChain= ruleTargetChain EOF
            {
             newCompositeNode(grammarAccess.getTargetChainRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTargetChain=ruleTargetChain();

            state._fsp--;

             current =iv_ruleTargetChain; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTargetChain"


    // $ANTLR start "ruleTargetChain"
    // InternalNgt.g:650:1: ruleTargetChain returns [EObject current=null] : ( ( (lv_start_0_0= ruleTestTarget ) ) ( (lv_connections_1_0= ruleInheritance ) ) ( (lv_connections_2_0= ruleNodeConnection ) )* ) ;
    public final EObject ruleTargetChain() throws RecognitionException {
        EObject current = null;

        EObject lv_start_0_0 = null;

        EObject lv_connections_1_0 = null;

        EObject lv_connections_2_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:656:2: ( ( ( (lv_start_0_0= ruleTestTarget ) ) ( (lv_connections_1_0= ruleInheritance ) ) ( (lv_connections_2_0= ruleNodeConnection ) )* ) )
            // InternalNgt.g:657:2: ( ( (lv_start_0_0= ruleTestTarget ) ) ( (lv_connections_1_0= ruleInheritance ) ) ( (lv_connections_2_0= ruleNodeConnection ) )* )
            {
            // InternalNgt.g:657:2: ( ( (lv_start_0_0= ruleTestTarget ) ) ( (lv_connections_1_0= ruleInheritance ) ) ( (lv_connections_2_0= ruleNodeConnection ) )* )
            // InternalNgt.g:658:3: ( (lv_start_0_0= ruleTestTarget ) ) ( (lv_connections_1_0= ruleInheritance ) ) ( (lv_connections_2_0= ruleNodeConnection ) )*
            {
            // InternalNgt.g:658:3: ( (lv_start_0_0= ruleTestTarget ) )
            // InternalNgt.g:659:4: (lv_start_0_0= ruleTestTarget )
            {
            // InternalNgt.g:659:4: (lv_start_0_0= ruleTestTarget )
            // InternalNgt.g:660:5: lv_start_0_0= ruleTestTarget
            {

            					newCompositeNode(grammarAccess.getTargetChainAccess().getStartTestTargetParserRuleCall_0_0());
            				
            pushFollow(FOLLOW_13);
            lv_start_0_0=ruleTestTarget();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getTargetChainRule());
            					}
            					set(
            						current,
            						"start",
            						lv_start_0_0,
            						"org.opentestmodeling.vstep.Ngt.TestTarget");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalNgt.g:677:3: ( (lv_connections_1_0= ruleInheritance ) )
            // InternalNgt.g:678:4: (lv_connections_1_0= ruleInheritance )
            {
            // InternalNgt.g:678:4: (lv_connections_1_0= ruleInheritance )
            // InternalNgt.g:679:5: lv_connections_1_0= ruleInheritance
            {

            					newCompositeNode(grammarAccess.getTargetChainAccess().getConnectionsInheritanceParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_14);
            lv_connections_1_0=ruleInheritance();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getTargetChainRule());
            					}
            					add(
            						current,
            						"connections",
            						lv_connections_1_0,
            						"org.opentestmodeling.vstep.Ngt.Inheritance");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalNgt.g:696:3: ( (lv_connections_2_0= ruleNodeConnection ) )*
            loop14:
            do {
                int alt14=2;
                int LA14_0 = input.LA(1);

                if ( ((LA14_0>=18 && LA14_0<=20)) ) {
                    alt14=1;
                }


                switch (alt14) {
            	case 1 :
            	    // InternalNgt.g:697:4: (lv_connections_2_0= ruleNodeConnection )
            	    {
            	    // InternalNgt.g:697:4: (lv_connections_2_0= ruleNodeConnection )
            	    // InternalNgt.g:698:5: lv_connections_2_0= ruleNodeConnection
            	    {

            	    					newCompositeNode(grammarAccess.getTargetChainAccess().getConnectionsNodeConnectionParserRuleCall_2_0());
            	    				
            	    pushFollow(FOLLOW_14);
            	    lv_connections_2_0=ruleNodeConnection();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getTargetChainRule());
            	    					}
            	    					add(
            	    						current,
            	    						"connections",
            	    						lv_connections_2_0,
            	    						"org.opentestmodeling.vstep.Ngt.NodeConnection");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTargetChain"


    // $ANTLR start "entryRuleNodeChain"
    // InternalNgt.g:719:1: entryRuleNodeChain returns [EObject current=null] : iv_ruleNodeChain= ruleNodeChain EOF ;
    public final EObject entryRuleNodeChain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNodeChain = null;


        try {
            // InternalNgt.g:719:50: (iv_ruleNodeChain= ruleNodeChain EOF )
            // InternalNgt.g:720:2: iv_ruleNodeChain= ruleNodeChain EOF
            {
             newCompositeNode(grammarAccess.getNodeChainRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleNodeChain=ruleNodeChain();

            state._fsp--;

             current =iv_ruleNodeChain; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNodeChain"


    // $ANTLR start "ruleNodeChain"
    // InternalNgt.g:726:1: ruleNodeChain returns [EObject current=null] : ( ( (lv_start_0_0= ruleTestNode ) ) ( ( (lv_connections_1_1= ruleRelation | lv_connections_1_2= ruleDependency ) ) ) ( (lv_connections_2_0= ruleNodeConnection ) )* ) ;
    public final EObject ruleNodeChain() throws RecognitionException {
        EObject current = null;

        EObject lv_start_0_0 = null;

        EObject lv_connections_1_1 = null;

        EObject lv_connections_1_2 = null;

        EObject lv_connections_2_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:732:2: ( ( ( (lv_start_0_0= ruleTestNode ) ) ( ( (lv_connections_1_1= ruleRelation | lv_connections_1_2= ruleDependency ) ) ) ( (lv_connections_2_0= ruleNodeConnection ) )* ) )
            // InternalNgt.g:733:2: ( ( (lv_start_0_0= ruleTestNode ) ) ( ( (lv_connections_1_1= ruleRelation | lv_connections_1_2= ruleDependency ) ) ) ( (lv_connections_2_0= ruleNodeConnection ) )* )
            {
            // InternalNgt.g:733:2: ( ( (lv_start_0_0= ruleTestNode ) ) ( ( (lv_connections_1_1= ruleRelation | lv_connections_1_2= ruleDependency ) ) ) ( (lv_connections_2_0= ruleNodeConnection ) )* )
            // InternalNgt.g:734:3: ( (lv_start_0_0= ruleTestNode ) ) ( ( (lv_connections_1_1= ruleRelation | lv_connections_1_2= ruleDependency ) ) ) ( (lv_connections_2_0= ruleNodeConnection ) )*
            {
            // InternalNgt.g:734:3: ( (lv_start_0_0= ruleTestNode ) )
            // InternalNgt.g:735:4: (lv_start_0_0= ruleTestNode )
            {
            // InternalNgt.g:735:4: (lv_start_0_0= ruleTestNode )
            // InternalNgt.g:736:5: lv_start_0_0= ruleTestNode
            {

            					newCompositeNode(grammarAccess.getNodeChainAccess().getStartTestNodeParserRuleCall_0_0());
            				
            pushFollow(FOLLOW_15);
            lv_start_0_0=ruleTestNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getNodeChainRule());
            					}
            					set(
            						current,
            						"start",
            						lv_start_0_0,
            						"org.opentestmodeling.vstep.Ngt.TestNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalNgt.g:753:3: ( ( (lv_connections_1_1= ruleRelation | lv_connections_1_2= ruleDependency ) ) )
            // InternalNgt.g:754:4: ( (lv_connections_1_1= ruleRelation | lv_connections_1_2= ruleDependency ) )
            {
            // InternalNgt.g:754:4: ( (lv_connections_1_1= ruleRelation | lv_connections_1_2= ruleDependency ) )
            // InternalNgt.g:755:5: (lv_connections_1_1= ruleRelation | lv_connections_1_2= ruleDependency )
            {
            // InternalNgt.g:755:5: (lv_connections_1_1= ruleRelation | lv_connections_1_2= ruleDependency )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==19) ) {
                alt15=1;
            }
            else if ( (LA15_0==20) ) {
                alt15=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalNgt.g:756:6: lv_connections_1_1= ruleRelation
                    {

                    						newCompositeNode(grammarAccess.getNodeChainAccess().getConnectionsRelationParserRuleCall_1_0_0());
                    					
                    pushFollow(FOLLOW_14);
                    lv_connections_1_1=ruleRelation();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getNodeChainRule());
                    						}
                    						add(
                    							current,
                    							"connections",
                    							lv_connections_1_1,
                    							"org.opentestmodeling.vstep.Ngt.Relation");
                    						afterParserOrEnumRuleCall();
                    					

                    }
                    break;
                case 2 :
                    // InternalNgt.g:772:6: lv_connections_1_2= ruleDependency
                    {

                    						newCompositeNode(grammarAccess.getNodeChainAccess().getConnectionsDependencyParserRuleCall_1_0_1());
                    					
                    pushFollow(FOLLOW_14);
                    lv_connections_1_2=ruleDependency();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getNodeChainRule());
                    						}
                    						add(
                    							current,
                    							"connections",
                    							lv_connections_1_2,
                    							"org.opentestmodeling.vstep.Ngt.Dependency");
                    						afterParserOrEnumRuleCall();
                    					

                    }
                    break;

            }


            }


            }

            // InternalNgt.g:790:3: ( (lv_connections_2_0= ruleNodeConnection ) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( ((LA16_0>=18 && LA16_0<=20)) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // InternalNgt.g:791:4: (lv_connections_2_0= ruleNodeConnection )
            	    {
            	    // InternalNgt.g:791:4: (lv_connections_2_0= ruleNodeConnection )
            	    // InternalNgt.g:792:5: lv_connections_2_0= ruleNodeConnection
            	    {

            	    					newCompositeNode(grammarAccess.getNodeChainAccess().getConnectionsNodeConnectionParserRuleCall_2_0());
            	    				
            	    pushFollow(FOLLOW_14);
            	    lv_connections_2_0=ruleNodeConnection();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getNodeChainRule());
            	    					}
            	    					add(
            	    						current,
            	    						"connections",
            	    						lv_connections_2_0,
            	    						"org.opentestmodeling.vstep.Ngt.NodeConnection");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNodeChain"


    // $ANTLR start "entryRuleStringList"
    // InternalNgt.g:813:1: entryRuleStringList returns [EObject current=null] : iv_ruleStringList= ruleStringList EOF ;
    public final EObject entryRuleStringList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringList = null;


        try {
            // InternalNgt.g:813:51: (iv_ruleStringList= ruleStringList EOF )
            // InternalNgt.g:814:2: iv_ruleStringList= ruleStringList EOF
            {
             newCompositeNode(grammarAccess.getStringListRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleStringList=ruleStringList();

            state._fsp--;

             current =iv_ruleStringList; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringList"


    // $ANTLR start "ruleStringList"
    // InternalNgt.g:820:1: ruleStringList returns [EObject current=null] : ( () otherlv_1= '[' ( ( (lv_list_2_0= ruleSTRING_OR_NUMBER ) ) (otherlv_3= ',' ( (lv_list_4_0= ruleSTRING_OR_NUMBER ) ) )* )? otherlv_5= ']' ) ;
    public final EObject ruleStringList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_list_2_0 = null;

        AntlrDatatypeRuleToken lv_list_4_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:826:2: ( ( () otherlv_1= '[' ( ( (lv_list_2_0= ruleSTRING_OR_NUMBER ) ) (otherlv_3= ',' ( (lv_list_4_0= ruleSTRING_OR_NUMBER ) ) )* )? otherlv_5= ']' ) )
            // InternalNgt.g:827:2: ( () otherlv_1= '[' ( ( (lv_list_2_0= ruleSTRING_OR_NUMBER ) ) (otherlv_3= ',' ( (lv_list_4_0= ruleSTRING_OR_NUMBER ) ) )* )? otherlv_5= ']' )
            {
            // InternalNgt.g:827:2: ( () otherlv_1= '[' ( ( (lv_list_2_0= ruleSTRING_OR_NUMBER ) ) (otherlv_3= ',' ( (lv_list_4_0= ruleSTRING_OR_NUMBER ) ) )* )? otherlv_5= ']' )
            // InternalNgt.g:828:3: () otherlv_1= '[' ( ( (lv_list_2_0= ruleSTRING_OR_NUMBER ) ) (otherlv_3= ',' ( (lv_list_4_0= ruleSTRING_OR_NUMBER ) ) )* )? otherlv_5= ']'
            {
            // InternalNgt.g:828:3: ()
            // InternalNgt.g:829:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getStringListAccess().getStringListAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,15,FOLLOW_16); 

            			newLeafNode(otherlv_1, grammarAccess.getStringListAccess().getLeftSquareBracketKeyword_1());
            		
            // InternalNgt.g:839:3: ( ( (lv_list_2_0= ruleSTRING_OR_NUMBER ) ) (otherlv_3= ',' ( (lv_list_4_0= ruleSTRING_OR_NUMBER ) ) )* )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_STRING||LA18_0==RULE_INT) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // InternalNgt.g:840:4: ( (lv_list_2_0= ruleSTRING_OR_NUMBER ) ) (otherlv_3= ',' ( (lv_list_4_0= ruleSTRING_OR_NUMBER ) ) )*
                    {
                    // InternalNgt.g:840:4: ( (lv_list_2_0= ruleSTRING_OR_NUMBER ) )
                    // InternalNgt.g:841:5: (lv_list_2_0= ruleSTRING_OR_NUMBER )
                    {
                    // InternalNgt.g:841:5: (lv_list_2_0= ruleSTRING_OR_NUMBER )
                    // InternalNgt.g:842:6: lv_list_2_0= ruleSTRING_OR_NUMBER
                    {

                    						newCompositeNode(grammarAccess.getStringListAccess().getListSTRING_OR_NUMBERParserRuleCall_2_0_0());
                    					
                    pushFollow(FOLLOW_7);
                    lv_list_2_0=ruleSTRING_OR_NUMBER();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getStringListRule());
                    						}
                    						add(
                    							current,
                    							"list",
                    							lv_list_2_0,
                    							"org.opentestmodeling.vstep.Ngt.STRING_OR_NUMBER");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }

                    // InternalNgt.g:859:4: (otherlv_3= ',' ( (lv_list_4_0= ruleSTRING_OR_NUMBER ) ) )*
                    loop17:
                    do {
                        int alt17=2;
                        int LA17_0 = input.LA(1);

                        if ( (LA17_0==16) ) {
                            alt17=1;
                        }


                        switch (alt17) {
                    	case 1 :
                    	    // InternalNgt.g:860:5: otherlv_3= ',' ( (lv_list_4_0= ruleSTRING_OR_NUMBER ) )
                    	    {
                    	    otherlv_3=(Token)match(input,16,FOLLOW_17); 

                    	    					newLeafNode(otherlv_3, grammarAccess.getStringListAccess().getCommaKeyword_2_1_0());
                    	    				
                    	    // InternalNgt.g:864:5: ( (lv_list_4_0= ruleSTRING_OR_NUMBER ) )
                    	    // InternalNgt.g:865:6: (lv_list_4_0= ruleSTRING_OR_NUMBER )
                    	    {
                    	    // InternalNgt.g:865:6: (lv_list_4_0= ruleSTRING_OR_NUMBER )
                    	    // InternalNgt.g:866:7: lv_list_4_0= ruleSTRING_OR_NUMBER
                    	    {

                    	    							newCompositeNode(grammarAccess.getStringListAccess().getListSTRING_OR_NUMBERParserRuleCall_2_1_1_0());
                    	    						
                    	    pushFollow(FOLLOW_7);
                    	    lv_list_4_0=ruleSTRING_OR_NUMBER();

                    	    state._fsp--;


                    	    							if (current==null) {
                    	    								current = createModelElementForParent(grammarAccess.getStringListRule());
                    	    							}
                    	    							add(
                    	    								current,
                    	    								"list",
                    	    								lv_list_4_0,
                    	    								"org.opentestmodeling.vstep.Ngt.STRING_OR_NUMBER");
                    	    							afterParserOrEnumRuleCall();
                    	    						

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop17;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,17,FOLLOW_2); 

            			newLeafNode(otherlv_5, grammarAccess.getStringListAccess().getRightSquareBracketKeyword_3());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringList"


    // $ANTLR start "entryRuleQualityRisk"
    // InternalNgt.g:893:1: entryRuleQualityRisk returns [EObject current=null] : iv_ruleQualityRisk= ruleQualityRisk EOF ;
    public final EObject entryRuleQualityRisk() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQualityRisk = null;


        try {
            // InternalNgt.g:893:52: (iv_ruleQualityRisk= ruleQualityRisk EOF )
            // InternalNgt.g:894:2: iv_ruleQualityRisk= ruleQualityRisk EOF
            {
             newCompositeNode(grammarAccess.getQualityRiskRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleQualityRisk=ruleQualityRisk();

            state._fsp--;

             current =iv_ruleQualityRisk; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualityRisk"


    // $ANTLR start "ruleQualityRisk"
    // InternalNgt.g:900:1: ruleQualityRisk returns [EObject current=null] : (otherlv_0= '[' otherlv_1= 'importance=' ( (lv_importance_2_0= RULE_INT ) ) otherlv_3= ',' otherlv_4= 'severity=' ( (lv_severity_5_0= RULE_INT ) ) otherlv_6= ']' ) ;
    public final EObject ruleQualityRisk() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token lv_importance_2_0=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token lv_severity_5_0=null;
        Token otherlv_6=null;


        	enterRule();

        try {
            // InternalNgt.g:906:2: ( (otherlv_0= '[' otherlv_1= 'importance=' ( (lv_importance_2_0= RULE_INT ) ) otherlv_3= ',' otherlv_4= 'severity=' ( (lv_severity_5_0= RULE_INT ) ) otherlv_6= ']' ) )
            // InternalNgt.g:907:2: (otherlv_0= '[' otherlv_1= 'importance=' ( (lv_importance_2_0= RULE_INT ) ) otherlv_3= ',' otherlv_4= 'severity=' ( (lv_severity_5_0= RULE_INT ) ) otherlv_6= ']' )
            {
            // InternalNgt.g:907:2: (otherlv_0= '[' otherlv_1= 'importance=' ( (lv_importance_2_0= RULE_INT ) ) otherlv_3= ',' otherlv_4= 'severity=' ( (lv_severity_5_0= RULE_INT ) ) otherlv_6= ']' )
            // InternalNgt.g:908:3: otherlv_0= '[' otherlv_1= 'importance=' ( (lv_importance_2_0= RULE_INT ) ) otherlv_3= ',' otherlv_4= 'severity=' ( (lv_severity_5_0= RULE_INT ) ) otherlv_6= ']'
            {
            otherlv_0=(Token)match(input,15,FOLLOW_18); 

            			newLeafNode(otherlv_0, grammarAccess.getQualityRiskAccess().getLeftSquareBracketKeyword_0());
            		
            otherlv_1=(Token)match(input,21,FOLLOW_19); 

            			newLeafNode(otherlv_1, grammarAccess.getQualityRiskAccess().getImportanceKeyword_1());
            		
            // InternalNgt.g:916:3: ( (lv_importance_2_0= RULE_INT ) )
            // InternalNgt.g:917:4: (lv_importance_2_0= RULE_INT )
            {
            // InternalNgt.g:917:4: (lv_importance_2_0= RULE_INT )
            // InternalNgt.g:918:5: lv_importance_2_0= RULE_INT
            {
            lv_importance_2_0=(Token)match(input,RULE_INT,FOLLOW_20); 

            					newLeafNode(lv_importance_2_0, grammarAccess.getQualityRiskAccess().getImportanceINTTerminalRuleCall_2_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getQualityRiskRule());
            					}
            					setWithLastConsumed(
            						current,
            						"importance",
            						lv_importance_2_0,
            						"org.eclipse.xtext.common.Terminals.INT");
            				

            }


            }

            otherlv_3=(Token)match(input,16,FOLLOW_21); 

            			newLeafNode(otherlv_3, grammarAccess.getQualityRiskAccess().getCommaKeyword_3());
            		
            otherlv_4=(Token)match(input,22,FOLLOW_19); 

            			newLeafNode(otherlv_4, grammarAccess.getQualityRiskAccess().getSeverityKeyword_4());
            		
            // InternalNgt.g:942:3: ( (lv_severity_5_0= RULE_INT ) )
            // InternalNgt.g:943:4: (lv_severity_5_0= RULE_INT )
            {
            // InternalNgt.g:943:4: (lv_severity_5_0= RULE_INT )
            // InternalNgt.g:944:5: lv_severity_5_0= RULE_INT
            {
            lv_severity_5_0=(Token)match(input,RULE_INT,FOLLOW_9); 

            					newLeafNode(lv_severity_5_0, grammarAccess.getQualityRiskAccess().getSeverityINTTerminalRuleCall_5_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getQualityRiskRule());
            					}
            					setWithLastConsumed(
            						current,
            						"severity",
            						lv_severity_5_0,
            						"org.eclipse.xtext.common.Terminals.INT");
            				

            }


            }

            otherlv_6=(Token)match(input,17,FOLLOW_2); 

            			newLeafNode(otherlv_6, grammarAccess.getQualityRiskAccess().getRightSquareBracketKeyword_6());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualityRisk"


    // $ANTLR start "entryRuleTestContainer"
    // InternalNgt.g:968:1: entryRuleTestContainer returns [EObject current=null] : iv_ruleTestContainer= ruleTestContainer EOF ;
    public final EObject entryRuleTestContainer() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestContainer = null;


        try {
            // InternalNgt.g:968:54: (iv_ruleTestContainer= ruleTestContainer EOF )
            // InternalNgt.g:969:2: iv_ruleTestContainer= ruleTestContainer EOF
            {
             newCompositeNode(grammarAccess.getTestContainerRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTestContainer=ruleTestContainer();

            state._fsp--;

             current =iv_ruleTestContainer; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestContainer"


    // $ANTLR start "ruleTestContainer"
    // InternalNgt.g:975:1: ruleTestContainer returns [EObject current=null] : (otherlv_0= 'container' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= '{' ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )* otherlv_4= '}' )? ) ;
    public final EObject ruleTestContainer() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_elements_3_1 = null;

        EObject lv_elements_3_2 = null;



        	enterRule();

        try {
            // InternalNgt.g:981:2: ( (otherlv_0= 'container' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= '{' ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )* otherlv_4= '}' )? ) )
            // InternalNgt.g:982:2: (otherlv_0= 'container' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= '{' ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )* otherlv_4= '}' )? )
            {
            // InternalNgt.g:982:2: (otherlv_0= 'container' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= '{' ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )* otherlv_4= '}' )? )
            // InternalNgt.g:983:3: otherlv_0= 'container' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= '{' ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )* otherlv_4= '}' )?
            {
            otherlv_0=(Token)match(input,23,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getTestContainerAccess().getContainerKeyword_0());
            		
            // InternalNgt.g:987:3: ( (lv_name_1_0= RULE_STRING ) )
            // InternalNgt.g:988:4: (lv_name_1_0= RULE_STRING )
            {
            // InternalNgt.g:988:4: (lv_name_1_0= RULE_STRING )
            // InternalNgt.g:989:5: lv_name_1_0= RULE_STRING
            {
            lv_name_1_0=(Token)match(input,RULE_STRING,FOLLOW_22); 

            					newLeafNode(lv_name_1_0, grammarAccess.getTestContainerAccess().getNameSTRINGTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getTestContainerRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.eclipse.xtext.common.Terminals.STRING");
            				

            }


            }

            // InternalNgt.g:1005:3: (otherlv_2= '{' ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )* otherlv_4= '}' )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==24) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalNgt.g:1006:4: otherlv_2= '{' ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )* otherlv_4= '}'
                    {
                    otherlv_2=(Token)match(input,24,FOLLOW_23); 

                    				newLeafNode(otherlv_2, grammarAccess.getTestContainerAccess().getLeftCurlyBracketKeyword_2_0());
                    			
                    // InternalNgt.g:1010:4: ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )*
                    loop20:
                    do {
                        int alt20=2;
                        int LA20_0 = input.LA(1);

                        if ( (LA20_0==13||LA20_0==15||LA20_0==23) ) {
                            alt20=1;
                        }


                        switch (alt20) {
                    	case 1 :
                    	    // InternalNgt.g:1011:5: ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) )
                    	    {
                    	    // InternalNgt.g:1011:5: ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) )
                    	    // InternalNgt.g:1012:6: (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode )
                    	    {
                    	    // InternalNgt.g:1012:6: (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode )
                    	    int alt19=2;
                    	    int LA19_0 = input.LA(1);

                    	    if ( (LA19_0==23) ) {
                    	        alt19=1;
                    	    }
                    	    else if ( (LA19_0==13||LA19_0==15) ) {
                    	        alt19=2;
                    	    }
                    	    else {
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 19, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt19) {
                    	        case 1 :
                    	            // InternalNgt.g:1013:7: lv_elements_3_1= ruleTestContainer
                    	            {

                    	            							newCompositeNode(grammarAccess.getTestContainerAccess().getElementsTestContainerParserRuleCall_2_1_0_0());
                    	            						
                    	            pushFollow(FOLLOW_23);
                    	            lv_elements_3_1=ruleTestContainer();

                    	            state._fsp--;


                    	            							if (current==null) {
                    	            								current = createModelElementForParent(grammarAccess.getTestContainerRule());
                    	            							}
                    	            							add(
                    	            								current,
                    	            								"elements",
                    	            								lv_elements_3_1,
                    	            								"org.opentestmodeling.vstep.Ngt.TestContainer");
                    	            							afterParserOrEnumRuleCall();
                    	            						

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalNgt.g:1029:7: lv_elements_3_2= ruleTestNode
                    	            {

                    	            							newCompositeNode(grammarAccess.getTestContainerAccess().getElementsTestNodeParserRuleCall_2_1_0_1());
                    	            						
                    	            pushFollow(FOLLOW_23);
                    	            lv_elements_3_2=ruleTestNode();

                    	            state._fsp--;


                    	            							if (current==null) {
                    	            								current = createModelElementForParent(grammarAccess.getTestContainerRule());
                    	            							}
                    	            							add(
                    	            								current,
                    	            								"elements",
                    	            								lv_elements_3_2,
                    	            								"org.opentestmodeling.vstep.Ngt.TestNode");
                    	            							afterParserOrEnumRuleCall();
                    	            						

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop20;
                        }
                    } while (true);

                    otherlv_4=(Token)match(input,25,FOLLOW_2); 

                    				newLeafNode(otherlv_4, grammarAccess.getTestContainerAccess().getRightCurlyBracketKeyword_2_2());
                    			

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestContainer"


    // $ANTLR start "entryRuleContainerConnection"
    // InternalNgt.g:1056:1: entryRuleContainerConnection returns [EObject current=null] : iv_ruleContainerConnection= ruleContainerConnection EOF ;
    public final EObject entryRuleContainerConnection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleContainerConnection = null;


        try {
            // InternalNgt.g:1056:60: (iv_ruleContainerConnection= ruleContainerConnection EOF )
            // InternalNgt.g:1057:2: iv_ruleContainerConnection= ruleContainerConnection EOF
            {
             newCompositeNode(grammarAccess.getContainerConnectionRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleContainerConnection=ruleContainerConnection();

            state._fsp--;

             current =iv_ruleContainerConnection; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleContainerConnection"


    // $ANTLR start "ruleContainerConnection"
    // InternalNgt.g:1063:1: ruleContainerConnection returns [EObject current=null] : ( ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) ) ) ( (lv_target_1_0= ruleTestContainer ) ) ) ;
    public final EObject ruleContainerConnection() throws RecognitionException {
        EObject current = null;

        EObject lv_connector_0_1 = null;

        EObject lv_connector_0_2 = null;

        EObject lv_target_1_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:1069:2: ( ( ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) ) ) ( (lv_target_1_0= ruleTestContainer ) ) ) )
            // InternalNgt.g:1070:2: ( ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) ) ) ( (lv_target_1_0= ruleTestContainer ) ) )
            {
            // InternalNgt.g:1070:2: ( ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) ) ) ( (lv_target_1_0= ruleTestContainer ) ) )
            // InternalNgt.g:1071:3: ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) ) ) ( (lv_target_1_0= ruleTestContainer ) )
            {
            // InternalNgt.g:1071:3: ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) ) )
            // InternalNgt.g:1072:4: ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) )
            {
            // InternalNgt.g:1072:4: ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) )
            // InternalNgt.g:1073:5: (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency )
            {
            // InternalNgt.g:1073:5: (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==19) ) {
                alt22=1;
            }
            else if ( (LA22_0==20) ) {
                alt22=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalNgt.g:1074:6: lv_connector_0_1= ruleRelation
                    {

                    						newCompositeNode(grammarAccess.getContainerConnectionAccess().getConnectorRelationParserRuleCall_0_0_0());
                    					
                    pushFollow(FOLLOW_24);
                    lv_connector_0_1=ruleRelation();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getContainerConnectionRule());
                    						}
                    						set(
                    							current,
                    							"connector",
                    							lv_connector_0_1,
                    							"org.opentestmodeling.vstep.Ngt.Relation");
                    						afterParserOrEnumRuleCall();
                    					

                    }
                    break;
                case 2 :
                    // InternalNgt.g:1090:6: lv_connector_0_2= ruleDependency
                    {

                    						newCompositeNode(grammarAccess.getContainerConnectionAccess().getConnectorDependencyParserRuleCall_0_0_1());
                    					
                    pushFollow(FOLLOW_24);
                    lv_connector_0_2=ruleDependency();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getContainerConnectionRule());
                    						}
                    						set(
                    							current,
                    							"connector",
                    							lv_connector_0_2,
                    							"org.opentestmodeling.vstep.Ngt.Dependency");
                    						afterParserOrEnumRuleCall();
                    					

                    }
                    break;

            }


            }


            }

            // InternalNgt.g:1108:3: ( (lv_target_1_0= ruleTestContainer ) )
            // InternalNgt.g:1109:4: (lv_target_1_0= ruleTestContainer )
            {
            // InternalNgt.g:1109:4: (lv_target_1_0= ruleTestContainer )
            // InternalNgt.g:1110:5: lv_target_1_0= ruleTestContainer
            {

            					newCompositeNode(grammarAccess.getContainerConnectionAccess().getTargetTestContainerParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_2);
            lv_target_1_0=ruleTestContainer();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getContainerConnectionRule());
            					}
            					set(
            						current,
            						"target",
            						lv_target_1_0,
            						"org.opentestmodeling.vstep.Ngt.TestContainer");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleContainerConnection"


    // $ANTLR start "entryRuleSTRING_OR_NUMBER"
    // InternalNgt.g:1131:1: entryRuleSTRING_OR_NUMBER returns [String current=null] : iv_ruleSTRING_OR_NUMBER= ruleSTRING_OR_NUMBER EOF ;
    public final String entryRuleSTRING_OR_NUMBER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSTRING_OR_NUMBER = null;


        try {
            // InternalNgt.g:1131:56: (iv_ruleSTRING_OR_NUMBER= ruleSTRING_OR_NUMBER EOF )
            // InternalNgt.g:1132:2: iv_ruleSTRING_OR_NUMBER= ruleSTRING_OR_NUMBER EOF
            {
             newCompositeNode(grammarAccess.getSTRING_OR_NUMBERRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSTRING_OR_NUMBER=ruleSTRING_OR_NUMBER();

            state._fsp--;

             current =iv_ruleSTRING_OR_NUMBER.getText(); 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSTRING_OR_NUMBER"


    // $ANTLR start "ruleSTRING_OR_NUMBER"
    // InternalNgt.g:1138:1: ruleSTRING_OR_NUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleSTRING_OR_NUMBER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_INT_1=null;


        	enterRule();

        try {
            // InternalNgt.g:1144:2: ( (this_STRING_0= RULE_STRING | this_INT_1= RULE_INT ) )
            // InternalNgt.g:1145:2: (this_STRING_0= RULE_STRING | this_INT_1= RULE_INT )
            {
            // InternalNgt.g:1145:2: (this_STRING_0= RULE_STRING | this_INT_1= RULE_INT )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_STRING) ) {
                alt23=1;
            }
            else if ( (LA23_0==RULE_INT) ) {
                alt23=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalNgt.g:1146:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); 

                    			current.merge(this_STRING_0);
                    		

                    			newLeafNode(this_STRING_0, grammarAccess.getSTRING_OR_NUMBERAccess().getSTRINGTerminalRuleCall_0());
                    		

                    }
                    break;
                case 2 :
                    // InternalNgt.g:1154:3: this_INT_1= RULE_INT
                    {
                    this_INT_1=(Token)match(input,RULE_INT,FOLLOW_2); 

                    			current.merge(this_INT_1);
                    		

                    			newLeafNode(this_INT_1, grammarAccess.getSTRING_OR_NUMBERAccess().getINTTerminalRuleCall_1());
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSTRING_OR_NUMBER"

    // Delegated rules


    protected DFA1 dfa1 = new DFA1(this);
    static final String dfa_1s = "\36\uffff";
    static final String dfa_2s = "\6\uffff\1\12\1\uffff\2\12\4\uffff\1\12\17\uffff";
    static final String dfa_3s = "\1\15\2\4\1\uffff\1\16\1\20\1\5\1\4\1\5\1\15\2\uffff\1\21\1\4\1\15\1\6\4\20\2\4\1\26\2\20\1\25\1\6\1\21\1\20\1\4";
    static final String dfa_4s = "\1\27\2\4\1\uffff\1\16\1\21\1\27\1\17\2\27\2\uffff\1\21\1\25\1\27\1\6\3\21\1\20\1\6\1\17\1\26\2\21\1\25\1\6\2\21\1\4";
    static final String dfa_5s = "\3\uffff\1\3\6\uffff\1\1\1\2\22\uffff";
    static final String dfa_6s = "\36\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\1\uffff\1\2\7\uffff\1\3",
            "\1\4",
            "\1\5",
            "",
            "\1\6",
            "\1\7\1\10",
            "\1\11\7\uffff\1\12\1\uffff\1\12\2\uffff\3\13\2\uffff\1\12",
            "\1\14\12\uffff\1\15",
            "\1\16\7\uffff\1\12\1\uffff\1\12\3\uffff\2\13\2\uffff\1\12",
            "\1\12\1\uffff\1\12\2\uffff\3\13\2\uffff\1\12",
            "",
            "",
            "\1\10",
            "\1\20\1\uffff\1\21\12\uffff\1\22\3\uffff\1\17",
            "\1\12\1\uffff\1\12\3\uffff\2\13\2\uffff\1\12",
            "\1\23",
            "\1\24\1\22",
            "\1\24\1\22",
            "\1\25\1\10",
            "\1\26",
            "\1\27\1\uffff\1\30",
            "\1\14\12\uffff\1\31",
            "\1\32",
            "\1\24\1\22",
            "\1\24\1\22",
            "\1\17",
            "\1\33",
            "\1\34",
            "\1\35\1\10",
            "\1\14"
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "80:4: (lv_testTargets_0_1= ruleTestNode | lv_testTargets_0_2= ruleChain | lv_testTargets_0_3= ruleTestContainer )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x000000000080A002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000030000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000080020L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x000000000000A000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x00000000001C0002L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x00000000001C0000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000020050L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000050L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x000000000280A000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x000000000080A000L});

}
package org.opentestmodeling.vstep.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.opentestmodeling.vstep.services.NgtGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

@SuppressWarnings("all")
public class InternalNgtParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_STRING", "RULE_INT", "RULE_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "'('", "')'", "'['", "','", "']'", "'-'", "'-|>'", "'->'", "'<<'", "'>>'", "'importance='", "'severity='", "'container'", "'{'", "'}'"
    };
    public static final int RULE_STRING=4;
    public static final int RULE_SL_COMMENT=8;
    public static final int T__19=19;
    public static final int T__15=15;
    public static final int T__16=16;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__11=11;
    public static final int T__12=12;
    public static final int T__13=13;
    public static final int T__14=14;
    public static final int EOF=-1;
    public static final int RULE_ID=6;
    public static final int RULE_WS=9;
    public static final int RULE_ANY_OTHER=10;
    public static final int RULE_INT=5;
    public static final int T__22=22;
    public static final int RULE_ML_COMMENT=7;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;

    // delegates
    // delegators


        public InternalNgtParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalNgtParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalNgtParser.tokenNames; }
    public String getGrammarFileName() { return "InternalNgt.g"; }



     	private NgtGrammarAccess grammarAccess;

        public InternalNgtParser(TokenStream input, NgtGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected NgtGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalNgt.g:64:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalNgt.g:64:46: (iv_ruleModel= ruleModel EOF )
            // InternalNgt.g:65:2: iv_ruleModel= ruleModel EOF
            {
             newCompositeNode(grammarAccess.getModelRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;

             current =iv_ruleModel; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalNgt.g:71:1: ruleModel returns [EObject current=null] : ( ( (lv_testTargets_0_1= ruleChain | lv_testTargets_0_2= ruleTestContainer ) ) )* ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_testTargets_0_1 = null;

        EObject lv_testTargets_0_2 = null;



        	enterRule();

        try {
            // InternalNgt.g:77:2: ( ( ( (lv_testTargets_0_1= ruleChain | lv_testTargets_0_2= ruleTestContainer ) ) )* )
            // InternalNgt.g:78:2: ( ( (lv_testTargets_0_1= ruleChain | lv_testTargets_0_2= ruleTestContainer ) ) )*
            {
            // InternalNgt.g:78:2: ( ( (lv_testTargets_0_1= ruleChain | lv_testTargets_0_2= ruleTestContainer ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==11||LA2_0==13||LA2_0==23) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // InternalNgt.g:79:3: ( (lv_testTargets_0_1= ruleChain | lv_testTargets_0_2= ruleTestContainer ) )
            	    {
            	    // InternalNgt.g:79:3: ( (lv_testTargets_0_1= ruleChain | lv_testTargets_0_2= ruleTestContainer ) )
            	    // InternalNgt.g:80:4: (lv_testTargets_0_1= ruleChain | lv_testTargets_0_2= ruleTestContainer )
            	    {
            	    // InternalNgt.g:80:4: (lv_testTargets_0_1= ruleChain | lv_testTargets_0_2= ruleTestContainer )
            	    int alt1=2;
            	    int LA1_0 = input.LA(1);

            	    if ( (LA1_0==11||LA1_0==13) ) {
            	        alt1=1;
            	    }
            	    else if ( (LA1_0==23) ) {
            	        alt1=2;
            	    }
            	    else {
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 1, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt1) {
            	        case 1 :
            	            // InternalNgt.g:81:5: lv_testTargets_0_1= ruleChain
            	            {

            	            					newCompositeNode(grammarAccess.getModelAccess().getTestTargetsChainParserRuleCall_0_0());
            	            				
            	            pushFollow(FOLLOW_3);
            	            lv_testTargets_0_1=ruleChain();

            	            state._fsp--;


            	            					if (current==null) {
            	            						current = createModelElementForParent(grammarAccess.getModelRule());
            	            					}
            	            					add(
            	            						current,
            	            						"testTargets",
            	            						lv_testTargets_0_1,
            	            						"org.opentestmodeling.vstep.Ngt.Chain");
            	            					afterParserOrEnumRuleCall();
            	            				

            	            }
            	            break;
            	        case 2 :
            	            // InternalNgt.g:97:5: lv_testTargets_0_2= ruleTestContainer
            	            {

            	            					newCompositeNode(grammarAccess.getModelAccess().getTestTargetsTestContainerParserRuleCall_0_1());
            	            				
            	            pushFollow(FOLLOW_3);
            	            lv_testTargets_0_2=ruleTestContainer();

            	            state._fsp--;


            	            					if (current==null) {
            	            						current = createModelElementForParent(grammarAccess.getModelRule());
            	            					}
            	            					add(
            	            						current,
            	            						"testTargets",
            	            						lv_testTargets_0_2,
            	            						"org.opentestmodeling.vstep.Ngt.TestContainer");
            	            					afterParserOrEnumRuleCall();
            	            				

            	            }
            	            break;

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleTestNode"
    // InternalNgt.g:118:1: entryRuleTestNode returns [EObject current=null] : iv_ruleTestNode= ruleTestNode EOF ;
    public final EObject entryRuleTestNode() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestNode = null;


        try {
            // InternalNgt.g:118:49: (iv_ruleTestNode= ruleTestNode EOF )
            // InternalNgt.g:119:2: iv_ruleTestNode= ruleTestNode EOF
            {
             newCompositeNode(grammarAccess.getTestNodeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTestNode=ruleTestNode();

            state._fsp--;

             current =iv_ruleTestNode; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestNode"


    // $ANTLR start "ruleTestNode"
    // InternalNgt.g:125:1: ruleTestNode returns [EObject current=null] : (this_TestTarget_0= ruleTestTarget | this_TestViewpoint_1= ruleTestViewpoint ) ;
    public final EObject ruleTestNode() throws RecognitionException {
        EObject current = null;

        EObject this_TestTarget_0 = null;

        EObject this_TestViewpoint_1 = null;



        	enterRule();

        try {
            // InternalNgt.g:131:2: ( (this_TestTarget_0= ruleTestTarget | this_TestViewpoint_1= ruleTestViewpoint ) )
            // InternalNgt.g:132:2: (this_TestTarget_0= ruleTestTarget | this_TestViewpoint_1= ruleTestViewpoint )
            {
            // InternalNgt.g:132:2: (this_TestTarget_0= ruleTestTarget | this_TestViewpoint_1= ruleTestViewpoint )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==11) ) {
                alt3=1;
            }
            else if ( (LA3_0==13) ) {
                alt3=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalNgt.g:133:3: this_TestTarget_0= ruleTestTarget
                    {

                    			newCompositeNode(grammarAccess.getTestNodeAccess().getTestTargetParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_TestTarget_0=ruleTestTarget();

                    state._fsp--;


                    			current = this_TestTarget_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalNgt.g:142:3: this_TestViewpoint_1= ruleTestViewpoint
                    {

                    			newCompositeNode(grammarAccess.getTestNodeAccess().getTestViewpointParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_TestViewpoint_1=ruleTestViewpoint();

                    state._fsp--;


                    			current = this_TestViewpoint_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestNode"


    // $ANTLR start "entryRuleTestTarget"
    // InternalNgt.g:154:1: entryRuleTestTarget returns [EObject current=null] : iv_ruleTestTarget= ruleTestTarget EOF ;
    public final EObject entryRuleTestTarget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestTarget = null;


        try {
            // InternalNgt.g:154:51: (iv_ruleTestTarget= ruleTestTarget EOF )
            // InternalNgt.g:155:2: iv_ruleTestTarget= ruleTestTarget EOF
            {
             newCompositeNode(grammarAccess.getTestTargetRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTestTarget=ruleTestTarget();

            state._fsp--;

             current =iv_ruleTestTarget; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestTarget"


    // $ANTLR start "ruleTestTarget"
    // InternalNgt.g:161:1: ruleTestTarget returns [EObject current=null] : (otherlv_0= '(' ( (lv_name_1_0= RULE_STRING ) ) otherlv_2= ')' ( (lv_stereotype_3_0= ruleStereotype ) )? ) ;
    public final EObject ruleTestTarget() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        EObject lv_stereotype_3_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:167:2: ( (otherlv_0= '(' ( (lv_name_1_0= RULE_STRING ) ) otherlv_2= ')' ( (lv_stereotype_3_0= ruleStereotype ) )? ) )
            // InternalNgt.g:168:2: (otherlv_0= '(' ( (lv_name_1_0= RULE_STRING ) ) otherlv_2= ')' ( (lv_stereotype_3_0= ruleStereotype ) )? )
            {
            // InternalNgt.g:168:2: (otherlv_0= '(' ( (lv_name_1_0= RULE_STRING ) ) otherlv_2= ')' ( (lv_stereotype_3_0= ruleStereotype ) )? )
            // InternalNgt.g:169:3: otherlv_0= '(' ( (lv_name_1_0= RULE_STRING ) ) otherlv_2= ')' ( (lv_stereotype_3_0= ruleStereotype ) )?
            {
            otherlv_0=(Token)match(input,11,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getTestTargetAccess().getLeftParenthesisKeyword_0());
            		
            // InternalNgt.g:173:3: ( (lv_name_1_0= RULE_STRING ) )
            // InternalNgt.g:174:4: (lv_name_1_0= RULE_STRING )
            {
            // InternalNgt.g:174:4: (lv_name_1_0= RULE_STRING )
            // InternalNgt.g:175:5: lv_name_1_0= RULE_STRING
            {
            lv_name_1_0=(Token)match(input,RULE_STRING,FOLLOW_5); 

            					newLeafNode(lv_name_1_0, grammarAccess.getTestTargetAccess().getNameSTRINGTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getTestTargetRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.eclipse.xtext.common.Terminals.STRING");
            				

            }


            }

            otherlv_2=(Token)match(input,12,FOLLOW_6); 

            			newLeafNode(otherlv_2, grammarAccess.getTestTargetAccess().getRightParenthesisKeyword_2());
            		
            // InternalNgt.g:195:3: ( (lv_stereotype_3_0= ruleStereotype ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==19) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // InternalNgt.g:196:4: (lv_stereotype_3_0= ruleStereotype )
                    {
                    // InternalNgt.g:196:4: (lv_stereotype_3_0= ruleStereotype )
                    // InternalNgt.g:197:5: lv_stereotype_3_0= ruleStereotype
                    {

                    					newCompositeNode(grammarAccess.getTestTargetAccess().getStereotypeStereotypeParserRuleCall_3_0());
                    				
                    pushFollow(FOLLOW_2);
                    lv_stereotype_3_0=ruleStereotype();

                    state._fsp--;


                    					if (current==null) {
                    						current = createModelElementForParent(grammarAccess.getTestTargetRule());
                    					}
                    					set(
                    						current,
                    						"stereotype",
                    						lv_stereotype_3_0,
                    						"org.opentestmodeling.vstep.Ngt.Stereotype");
                    					afterParserOrEnumRuleCall();
                    				

                    }


                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestTarget"


    // $ANTLR start "entryRuleTestViewpoint"
    // InternalNgt.g:218:1: entryRuleTestViewpoint returns [EObject current=null] : iv_ruleTestViewpoint= ruleTestViewpoint EOF ;
    public final EObject entryRuleTestViewpoint() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestViewpoint = null;


        try {
            // InternalNgt.g:218:54: (iv_ruleTestViewpoint= ruleTestViewpoint EOF )
            // InternalNgt.g:219:2: iv_ruleTestViewpoint= ruleTestViewpoint EOF
            {
             newCompositeNode(grammarAccess.getTestViewpointRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTestViewpoint=ruleTestViewpoint();

            state._fsp--;

             current =iv_ruleTestViewpoint; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestViewpoint"


    // $ANTLR start "ruleTestViewpoint"
    // InternalNgt.g:225:1: ruleTestViewpoint returns [EObject current=null] : (otherlv_0= '[' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= ',' ( (lv_testItems_3_0= ruleStringList ) )? ) (otherlv_4= ',' ( (lv_qualityRisk_5_0= ruleQualityRisk ) )? ) (otherlv_6= ',' ( (lv_coverage_7_0= RULE_STRING ) )? ) otherlv_8= ']' ( (lv_stereotype_9_0= ruleStereotype ) )? ) ;
    public final EObject ruleTestViewpoint() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token lv_coverage_7_0=null;
        Token otherlv_8=null;
        EObject lv_testItems_3_0 = null;

        AntlrDatatypeRuleToken lv_qualityRisk_5_0 = null;

        EObject lv_stereotype_9_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:231:2: ( (otherlv_0= '[' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= ',' ( (lv_testItems_3_0= ruleStringList ) )? ) (otherlv_4= ',' ( (lv_qualityRisk_5_0= ruleQualityRisk ) )? ) (otherlv_6= ',' ( (lv_coverage_7_0= RULE_STRING ) )? ) otherlv_8= ']' ( (lv_stereotype_9_0= ruleStereotype ) )? ) )
            // InternalNgt.g:232:2: (otherlv_0= '[' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= ',' ( (lv_testItems_3_0= ruleStringList ) )? ) (otherlv_4= ',' ( (lv_qualityRisk_5_0= ruleQualityRisk ) )? ) (otherlv_6= ',' ( (lv_coverage_7_0= RULE_STRING ) )? ) otherlv_8= ']' ( (lv_stereotype_9_0= ruleStereotype ) )? )
            {
            // InternalNgt.g:232:2: (otherlv_0= '[' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= ',' ( (lv_testItems_3_0= ruleStringList ) )? ) (otherlv_4= ',' ( (lv_qualityRisk_5_0= ruleQualityRisk ) )? ) (otherlv_6= ',' ( (lv_coverage_7_0= RULE_STRING ) )? ) otherlv_8= ']' ( (lv_stereotype_9_0= ruleStereotype ) )? )
            // InternalNgt.g:233:3: otherlv_0= '[' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= ',' ( (lv_testItems_3_0= ruleStringList ) )? ) (otherlv_4= ',' ( (lv_qualityRisk_5_0= ruleQualityRisk ) )? ) (otherlv_6= ',' ( (lv_coverage_7_0= RULE_STRING ) )? ) otherlv_8= ']' ( (lv_stereotype_9_0= ruleStereotype ) )?
            {
            otherlv_0=(Token)match(input,13,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getTestViewpointAccess().getLeftSquareBracketKeyword_0());
            		
            // InternalNgt.g:237:3: ( (lv_name_1_0= RULE_STRING ) )
            // InternalNgt.g:238:4: (lv_name_1_0= RULE_STRING )
            {
            // InternalNgt.g:238:4: (lv_name_1_0= RULE_STRING )
            // InternalNgt.g:239:5: lv_name_1_0= RULE_STRING
            {
            lv_name_1_0=(Token)match(input,RULE_STRING,FOLLOW_7); 

            					newLeafNode(lv_name_1_0, grammarAccess.getTestViewpointAccess().getNameSTRINGTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getTestViewpointRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.eclipse.xtext.common.Terminals.STRING");
            				

            }


            }

            // InternalNgt.g:255:3: (otherlv_2= ',' ( (lv_testItems_3_0= ruleStringList ) )? )
            // InternalNgt.g:256:4: otherlv_2= ',' ( (lv_testItems_3_0= ruleStringList ) )?
            {
            otherlv_2=(Token)match(input,14,FOLLOW_8); 

            				newLeafNode(otherlv_2, grammarAccess.getTestViewpointAccess().getCommaKeyword_2_0());
            			
            // InternalNgt.g:260:4: ( (lv_testItems_3_0= ruleStringList ) )?
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( (LA5_0==13) ) {
                alt5=1;
            }
            switch (alt5) {
                case 1 :
                    // InternalNgt.g:261:5: (lv_testItems_3_0= ruleStringList )
                    {
                    // InternalNgt.g:261:5: (lv_testItems_3_0= ruleStringList )
                    // InternalNgt.g:262:6: lv_testItems_3_0= ruleStringList
                    {

                    						newCompositeNode(grammarAccess.getTestViewpointAccess().getTestItemsStringListParserRuleCall_2_1_0());
                    					
                    pushFollow(FOLLOW_7);
                    lv_testItems_3_0=ruleStringList();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getTestViewpointRule());
                    						}
                    						set(
                    							current,
                    							"testItems",
                    							lv_testItems_3_0,
                    							"org.opentestmodeling.vstep.Ngt.StringList");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }
                    break;

            }


            }

            // InternalNgt.g:280:3: (otherlv_4= ',' ( (lv_qualityRisk_5_0= ruleQualityRisk ) )? )
            // InternalNgt.g:281:4: otherlv_4= ',' ( (lv_qualityRisk_5_0= ruleQualityRisk ) )?
            {
            otherlv_4=(Token)match(input,14,FOLLOW_9); 

            				newLeafNode(otherlv_4, grammarAccess.getTestViewpointAccess().getCommaKeyword_3_0());
            			
            // InternalNgt.g:285:4: ( (lv_qualityRisk_5_0= ruleQualityRisk ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==21) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalNgt.g:286:5: (lv_qualityRisk_5_0= ruleQualityRisk )
                    {
                    // InternalNgt.g:286:5: (lv_qualityRisk_5_0= ruleQualityRisk )
                    // InternalNgt.g:287:6: lv_qualityRisk_5_0= ruleQualityRisk
                    {

                    						newCompositeNode(grammarAccess.getTestViewpointAccess().getQualityRiskQualityRiskParserRuleCall_3_1_0());
                    					
                    pushFollow(FOLLOW_7);
                    lv_qualityRisk_5_0=ruleQualityRisk();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getTestViewpointRule());
                    						}
                    						set(
                    							current,
                    							"qualityRisk",
                    							lv_qualityRisk_5_0,
                    							"org.opentestmodeling.vstep.Ngt.QualityRisk");
                    						afterParserOrEnumRuleCall();
                    					

                    }


                    }
                    break;

            }


            }

            // InternalNgt.g:305:3: (otherlv_6= ',' ( (lv_coverage_7_0= RULE_STRING ) )? )
            // InternalNgt.g:306:4: otherlv_6= ',' ( (lv_coverage_7_0= RULE_STRING ) )?
            {
            otherlv_6=(Token)match(input,14,FOLLOW_10); 

            				newLeafNode(otherlv_6, grammarAccess.getTestViewpointAccess().getCommaKeyword_4_0());
            			
            // InternalNgt.g:310:4: ( (lv_coverage_7_0= RULE_STRING ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==RULE_STRING) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalNgt.g:311:5: (lv_coverage_7_0= RULE_STRING )
                    {
                    // InternalNgt.g:311:5: (lv_coverage_7_0= RULE_STRING )
                    // InternalNgt.g:312:6: lv_coverage_7_0= RULE_STRING
                    {
                    lv_coverage_7_0=(Token)match(input,RULE_STRING,FOLLOW_11); 

                    						newLeafNode(lv_coverage_7_0, grammarAccess.getTestViewpointAccess().getCoverageSTRINGTerminalRuleCall_4_1_0());
                    					

                    						if (current==null) {
                    							current = createModelElement(grammarAccess.getTestViewpointRule());
                    						}
                    						setWithLastConsumed(
                    							current,
                    							"coverage",
                    							lv_coverage_7_0,
                    							"org.eclipse.xtext.common.Terminals.STRING");
                    					

                    }


                    }
                    break;

            }


            }

            otherlv_8=(Token)match(input,15,FOLLOW_6); 

            			newLeafNode(otherlv_8, grammarAccess.getTestViewpointAccess().getRightSquareBracketKeyword_5());
            		
            // InternalNgt.g:333:3: ( (lv_stereotype_9_0= ruleStereotype ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==19) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalNgt.g:334:4: (lv_stereotype_9_0= ruleStereotype )
                    {
                    // InternalNgt.g:334:4: (lv_stereotype_9_0= ruleStereotype )
                    // InternalNgt.g:335:5: lv_stereotype_9_0= ruleStereotype
                    {

                    					newCompositeNode(grammarAccess.getTestViewpointAccess().getStereotypeStereotypeParserRuleCall_6_0());
                    				
                    pushFollow(FOLLOW_2);
                    lv_stereotype_9_0=ruleStereotype();

                    state._fsp--;


                    					if (current==null) {
                    						current = createModelElementForParent(grammarAccess.getTestViewpointRule());
                    					}
                    					set(
                    						current,
                    						"stereotype",
                    						lv_stereotype_9_0,
                    						"org.opentestmodeling.vstep.Ngt.Stereotype");
                    					afterParserOrEnumRuleCall();
                    				

                    }


                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestViewpoint"


    // $ANTLR start "entryRuleInheritance"
    // InternalNgt.g:356:1: entryRuleInheritance returns [EObject current=null] : iv_ruleInheritance= ruleInheritance EOF ;
    public final EObject entryRuleInheritance() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInheritance = null;


        try {
            // InternalNgt.g:356:52: (iv_ruleInheritance= ruleInheritance EOF )
            // InternalNgt.g:357:2: iv_ruleInheritance= ruleInheritance EOF
            {
             newCompositeNode(grammarAccess.getInheritanceRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleInheritance=ruleInheritance();

            state._fsp--;

             current =iv_ruleInheritance; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInheritance"


    // $ANTLR start "ruleInheritance"
    // InternalNgt.g:363:1: ruleInheritance returns [EObject current=null] : ( () otherlv_1= '-' ( (lv_stereotype_2_0= ruleStereotype ) )? otherlv_3= '-|>' ) ;
    public final EObject ruleInheritance() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_stereotype_2_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:369:2: ( ( () otherlv_1= '-' ( (lv_stereotype_2_0= ruleStereotype ) )? otherlv_3= '-|>' ) )
            // InternalNgt.g:370:2: ( () otherlv_1= '-' ( (lv_stereotype_2_0= ruleStereotype ) )? otherlv_3= '-|>' )
            {
            // InternalNgt.g:370:2: ( () otherlv_1= '-' ( (lv_stereotype_2_0= ruleStereotype ) )? otherlv_3= '-|>' )
            // InternalNgt.g:371:3: () otherlv_1= '-' ( (lv_stereotype_2_0= ruleStereotype ) )? otherlv_3= '-|>'
            {
            // InternalNgt.g:371:3: ()
            // InternalNgt.g:372:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getInheritanceAccess().getInheritanceAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,16,FOLLOW_12); 

            			newLeafNode(otherlv_1, grammarAccess.getInheritanceAccess().getHyphenMinusKeyword_1());
            		
            // InternalNgt.g:382:3: ( (lv_stereotype_2_0= ruleStereotype ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==19) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // InternalNgt.g:383:4: (lv_stereotype_2_0= ruleStereotype )
                    {
                    // InternalNgt.g:383:4: (lv_stereotype_2_0= ruleStereotype )
                    // InternalNgt.g:384:5: lv_stereotype_2_0= ruleStereotype
                    {

                    					newCompositeNode(grammarAccess.getInheritanceAccess().getStereotypeStereotypeParserRuleCall_2_0());
                    				
                    pushFollow(FOLLOW_13);
                    lv_stereotype_2_0=ruleStereotype();

                    state._fsp--;


                    					if (current==null) {
                    						current = createModelElementForParent(grammarAccess.getInheritanceRule());
                    					}
                    					set(
                    						current,
                    						"stereotype",
                    						lv_stereotype_2_0,
                    						"org.opentestmodeling.vstep.Ngt.Stereotype");
                    					afterParserOrEnumRuleCall();
                    				

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,17,FOLLOW_2); 

            			newLeafNode(otherlv_3, grammarAccess.getInheritanceAccess().getHyphenMinusVerticalLineGreaterThanSignKeyword_3());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInheritance"


    // $ANTLR start "entryRuleRelation"
    // InternalNgt.g:409:1: entryRuleRelation returns [EObject current=null] : iv_ruleRelation= ruleRelation EOF ;
    public final EObject entryRuleRelation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRelation = null;


        try {
            // InternalNgt.g:409:49: (iv_ruleRelation= ruleRelation EOF )
            // InternalNgt.g:410:2: iv_ruleRelation= ruleRelation EOF
            {
             newCompositeNode(grammarAccess.getRelationRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleRelation=ruleRelation();

            state._fsp--;

             current =iv_ruleRelation; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRelation"


    // $ANTLR start "ruleRelation"
    // InternalNgt.g:416:1: ruleRelation returns [EObject current=null] : ( () otherlv_1= '-' ( (lv_stereotype_2_0= ruleStereotype ) )? otherlv_3= '-' ) ;
    public final EObject ruleRelation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_stereotype_2_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:422:2: ( ( () otherlv_1= '-' ( (lv_stereotype_2_0= ruleStereotype ) )? otherlv_3= '-' ) )
            // InternalNgt.g:423:2: ( () otherlv_1= '-' ( (lv_stereotype_2_0= ruleStereotype ) )? otherlv_3= '-' )
            {
            // InternalNgt.g:423:2: ( () otherlv_1= '-' ( (lv_stereotype_2_0= ruleStereotype ) )? otherlv_3= '-' )
            // InternalNgt.g:424:3: () otherlv_1= '-' ( (lv_stereotype_2_0= ruleStereotype ) )? otherlv_3= '-'
            {
            // InternalNgt.g:424:3: ()
            // InternalNgt.g:425:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getRelationAccess().getRelationAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,16,FOLLOW_14); 

            			newLeafNode(otherlv_1, grammarAccess.getRelationAccess().getHyphenMinusKeyword_1());
            		
            // InternalNgt.g:435:3: ( (lv_stereotype_2_0= ruleStereotype ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==19) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // InternalNgt.g:436:4: (lv_stereotype_2_0= ruleStereotype )
                    {
                    // InternalNgt.g:436:4: (lv_stereotype_2_0= ruleStereotype )
                    // InternalNgt.g:437:5: lv_stereotype_2_0= ruleStereotype
                    {

                    					newCompositeNode(grammarAccess.getRelationAccess().getStereotypeStereotypeParserRuleCall_2_0());
                    				
                    pushFollow(FOLLOW_15);
                    lv_stereotype_2_0=ruleStereotype();

                    state._fsp--;


                    					if (current==null) {
                    						current = createModelElementForParent(grammarAccess.getRelationRule());
                    					}
                    					set(
                    						current,
                    						"stereotype",
                    						lv_stereotype_2_0,
                    						"org.opentestmodeling.vstep.Ngt.Stereotype");
                    					afterParserOrEnumRuleCall();
                    				

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,16,FOLLOW_2); 

            			newLeafNode(otherlv_3, grammarAccess.getRelationAccess().getHyphenMinusKeyword_3());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRelation"


    // $ANTLR start "entryRuleDependency"
    // InternalNgt.g:462:1: entryRuleDependency returns [EObject current=null] : iv_ruleDependency= ruleDependency EOF ;
    public final EObject entryRuleDependency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependency = null;


        try {
            // InternalNgt.g:462:51: (iv_ruleDependency= ruleDependency EOF )
            // InternalNgt.g:463:2: iv_ruleDependency= ruleDependency EOF
            {
             newCompositeNode(grammarAccess.getDependencyRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleDependency=ruleDependency();

            state._fsp--;

             current =iv_ruleDependency; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // InternalNgt.g:469:1: ruleDependency returns [EObject current=null] : ( () otherlv_1= '-' ( (lv_stereotype_2_0= ruleStereotype ) )? otherlv_3= '->' ) ;
    public final EObject ruleDependency() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_stereotype_2_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:475:2: ( ( () otherlv_1= '-' ( (lv_stereotype_2_0= ruleStereotype ) )? otherlv_3= '->' ) )
            // InternalNgt.g:476:2: ( () otherlv_1= '-' ( (lv_stereotype_2_0= ruleStereotype ) )? otherlv_3= '->' )
            {
            // InternalNgt.g:476:2: ( () otherlv_1= '-' ( (lv_stereotype_2_0= ruleStereotype ) )? otherlv_3= '->' )
            // InternalNgt.g:477:3: () otherlv_1= '-' ( (lv_stereotype_2_0= ruleStereotype ) )? otherlv_3= '->'
            {
            // InternalNgt.g:477:3: ()
            // InternalNgt.g:478:4: 
            {

            				current = forceCreateModelElement(
            					grammarAccess.getDependencyAccess().getDependencyAction_0(),
            					current);
            			

            }

            otherlv_1=(Token)match(input,16,FOLLOW_16); 

            			newLeafNode(otherlv_1, grammarAccess.getDependencyAccess().getHyphenMinusKeyword_1());
            		
            // InternalNgt.g:488:3: ( (lv_stereotype_2_0= ruleStereotype ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==19) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalNgt.g:489:4: (lv_stereotype_2_0= ruleStereotype )
                    {
                    // InternalNgt.g:489:4: (lv_stereotype_2_0= ruleStereotype )
                    // InternalNgt.g:490:5: lv_stereotype_2_0= ruleStereotype
                    {

                    					newCompositeNode(grammarAccess.getDependencyAccess().getStereotypeStereotypeParserRuleCall_2_0());
                    				
                    pushFollow(FOLLOW_17);
                    lv_stereotype_2_0=ruleStereotype();

                    state._fsp--;


                    					if (current==null) {
                    						current = createModelElementForParent(grammarAccess.getDependencyRule());
                    					}
                    					set(
                    						current,
                    						"stereotype",
                    						lv_stereotype_2_0,
                    						"org.opentestmodeling.vstep.Ngt.Stereotype");
                    					afterParserOrEnumRuleCall();
                    				

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,18,FOLLOW_2); 

            			newLeafNode(otherlv_3, grammarAccess.getDependencyAccess().getHyphenMinusGreaterThanSignKeyword_3());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleChain"
    // InternalNgt.g:515:1: entryRuleChain returns [EObject current=null] : iv_ruleChain= ruleChain EOF ;
    public final EObject entryRuleChain() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChain = null;


        try {
            // InternalNgt.g:515:46: (iv_ruleChain= ruleChain EOF )
            // InternalNgt.g:516:2: iv_ruleChain= ruleChain EOF
            {
             newCompositeNode(grammarAccess.getChainRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleChain=ruleChain();

            state._fsp--;

             current =iv_ruleChain; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChain"


    // $ANTLR start "ruleChain"
    // InternalNgt.g:522:1: ruleChain returns [EObject current=null] : ( ( (lv_start_0_0= ruleTestNode ) ) ( (lv_connections_1_0= ruleNodeConnection ) )* ) ;
    public final EObject ruleChain() throws RecognitionException {
        EObject current = null;

        EObject lv_start_0_0 = null;

        EObject lv_connections_1_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:528:2: ( ( ( (lv_start_0_0= ruleTestNode ) ) ( (lv_connections_1_0= ruleNodeConnection ) )* ) )
            // InternalNgt.g:529:2: ( ( (lv_start_0_0= ruleTestNode ) ) ( (lv_connections_1_0= ruleNodeConnection ) )* )
            {
            // InternalNgt.g:529:2: ( ( (lv_start_0_0= ruleTestNode ) ) ( (lv_connections_1_0= ruleNodeConnection ) )* )
            // InternalNgt.g:530:3: ( (lv_start_0_0= ruleTestNode ) ) ( (lv_connections_1_0= ruleNodeConnection ) )*
            {
            // InternalNgt.g:530:3: ( (lv_start_0_0= ruleTestNode ) )
            // InternalNgt.g:531:4: (lv_start_0_0= ruleTestNode )
            {
            // InternalNgt.g:531:4: (lv_start_0_0= ruleTestNode )
            // InternalNgt.g:532:5: lv_start_0_0= ruleTestNode
            {

            					newCompositeNode(grammarAccess.getChainAccess().getStartTestNodeParserRuleCall_0_0());
            				
            pushFollow(FOLLOW_18);
            lv_start_0_0=ruleTestNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getChainRule());
            					}
            					set(
            						current,
            						"start",
            						lv_start_0_0,
            						"org.opentestmodeling.vstep.Ngt.TestNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalNgt.g:549:3: ( (lv_connections_1_0= ruleNodeConnection ) )*
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==16) ) {
                    alt12=1;
                }


                switch (alt12) {
            	case 1 :
            	    // InternalNgt.g:550:4: (lv_connections_1_0= ruleNodeConnection )
            	    {
            	    // InternalNgt.g:550:4: (lv_connections_1_0= ruleNodeConnection )
            	    // InternalNgt.g:551:5: lv_connections_1_0= ruleNodeConnection
            	    {

            	    					newCompositeNode(grammarAccess.getChainAccess().getConnectionsNodeConnectionParserRuleCall_1_0());
            	    				
            	    pushFollow(FOLLOW_18);
            	    lv_connections_1_0=ruleNodeConnection();

            	    state._fsp--;


            	    					if (current==null) {
            	    						current = createModelElementForParent(grammarAccess.getChainRule());
            	    					}
            	    					add(
            	    						current,
            	    						"connections",
            	    						lv_connections_1_0,
            	    						"org.opentestmodeling.vstep.Ngt.NodeConnection");
            	    					afterParserOrEnumRuleCall();
            	    				

            	    }


            	    }
            	    break;

            	default :
            	    break loop12;
                }
            } while (true);


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChain"


    // $ANTLR start "entryRuleNodeConnection"
    // InternalNgt.g:572:1: entryRuleNodeConnection returns [EObject current=null] : iv_ruleNodeConnection= ruleNodeConnection EOF ;
    public final EObject entryRuleNodeConnection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNodeConnection = null;


        try {
            // InternalNgt.g:572:55: (iv_ruleNodeConnection= ruleNodeConnection EOF )
            // InternalNgt.g:573:2: iv_ruleNodeConnection= ruleNodeConnection EOF
            {
             newCompositeNode(grammarAccess.getNodeConnectionRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleNodeConnection=ruleNodeConnection();

            state._fsp--;

             current =iv_ruleNodeConnection; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNodeConnection"


    // $ANTLR start "ruleNodeConnection"
    // InternalNgt.g:579:1: ruleNodeConnection returns [EObject current=null] : (this_TargetConnection_0= ruleTargetConnection | this_ViewpointConnection_1= ruleViewpointConnection ) ;
    public final EObject ruleNodeConnection() throws RecognitionException {
        EObject current = null;

        EObject this_TargetConnection_0 = null;

        EObject this_ViewpointConnection_1 = null;



        	enterRule();

        try {
            // InternalNgt.g:585:2: ( (this_TargetConnection_0= ruleTargetConnection | this_ViewpointConnection_1= ruleViewpointConnection ) )
            // InternalNgt.g:586:2: (this_TargetConnection_0= ruleTargetConnection | this_ViewpointConnection_1= ruleViewpointConnection )
            {
            // InternalNgt.g:586:2: (this_TargetConnection_0= ruleTargetConnection | this_ViewpointConnection_1= ruleViewpointConnection )
            int alt13=2;
            alt13 = dfa13.predict(input);
            switch (alt13) {
                case 1 :
                    // InternalNgt.g:587:3: this_TargetConnection_0= ruleTargetConnection
                    {

                    			newCompositeNode(grammarAccess.getNodeConnectionAccess().getTargetConnectionParserRuleCall_0());
                    		
                    pushFollow(FOLLOW_2);
                    this_TargetConnection_0=ruleTargetConnection();

                    state._fsp--;


                    			current = this_TargetConnection_0;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;
                case 2 :
                    // InternalNgt.g:596:3: this_ViewpointConnection_1= ruleViewpointConnection
                    {

                    			newCompositeNode(grammarAccess.getNodeConnectionAccess().getViewpointConnectionParserRuleCall_1());
                    		
                    pushFollow(FOLLOW_2);
                    this_ViewpointConnection_1=ruleViewpointConnection();

                    state._fsp--;


                    			current = this_ViewpointConnection_1;
                    			afterParserOrEnumRuleCall();
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNodeConnection"


    // $ANTLR start "entryRuleTargetConnection"
    // InternalNgt.g:608:1: entryRuleTargetConnection returns [EObject current=null] : iv_ruleTargetConnection= ruleTargetConnection EOF ;
    public final EObject entryRuleTargetConnection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTargetConnection = null;


        try {
            // InternalNgt.g:608:57: (iv_ruleTargetConnection= ruleTargetConnection EOF )
            // InternalNgt.g:609:2: iv_ruleTargetConnection= ruleTargetConnection EOF
            {
             newCompositeNode(grammarAccess.getTargetConnectionRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTargetConnection=ruleTargetConnection();

            state._fsp--;

             current =iv_ruleTargetConnection; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTargetConnection"


    // $ANTLR start "ruleTargetConnection"
    // InternalNgt.g:615:1: ruleTargetConnection returns [EObject current=null] : ( ( (lv_connector_0_0= ruleInheritance ) ) ( (lv_target_1_0= ruleTestTarget ) ) ) ;
    public final EObject ruleTargetConnection() throws RecognitionException {
        EObject current = null;

        EObject lv_connector_0_0 = null;

        EObject lv_target_1_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:621:2: ( ( ( (lv_connector_0_0= ruleInheritance ) ) ( (lv_target_1_0= ruleTestTarget ) ) ) )
            // InternalNgt.g:622:2: ( ( (lv_connector_0_0= ruleInheritance ) ) ( (lv_target_1_0= ruleTestTarget ) ) )
            {
            // InternalNgt.g:622:2: ( ( (lv_connector_0_0= ruleInheritance ) ) ( (lv_target_1_0= ruleTestTarget ) ) )
            // InternalNgt.g:623:3: ( (lv_connector_0_0= ruleInheritance ) ) ( (lv_target_1_0= ruleTestTarget ) )
            {
            // InternalNgt.g:623:3: ( (lv_connector_0_0= ruleInheritance ) )
            // InternalNgt.g:624:4: (lv_connector_0_0= ruleInheritance )
            {
            // InternalNgt.g:624:4: (lv_connector_0_0= ruleInheritance )
            // InternalNgt.g:625:5: lv_connector_0_0= ruleInheritance
            {

            					newCompositeNode(grammarAccess.getTargetConnectionAccess().getConnectorInheritanceParserRuleCall_0_0());
            				
            pushFollow(FOLLOW_19);
            lv_connector_0_0=ruleInheritance();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getTargetConnectionRule());
            					}
            					set(
            						current,
            						"connector",
            						lv_connector_0_0,
            						"org.opentestmodeling.vstep.Ngt.Inheritance");
            					afterParserOrEnumRuleCall();
            				

            }


            }

            // InternalNgt.g:642:3: ( (lv_target_1_0= ruleTestTarget ) )
            // InternalNgt.g:643:4: (lv_target_1_0= ruleTestTarget )
            {
            // InternalNgt.g:643:4: (lv_target_1_0= ruleTestTarget )
            // InternalNgt.g:644:5: lv_target_1_0= ruleTestTarget
            {

            					newCompositeNode(grammarAccess.getTargetConnectionAccess().getTargetTestTargetParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_2);
            lv_target_1_0=ruleTestTarget();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getTargetConnectionRule());
            					}
            					set(
            						current,
            						"target",
            						lv_target_1_0,
            						"org.opentestmodeling.vstep.Ngt.TestTarget");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTargetConnection"


    // $ANTLR start "entryRuleViewpointConnection"
    // InternalNgt.g:665:1: entryRuleViewpointConnection returns [EObject current=null] : iv_ruleViewpointConnection= ruleViewpointConnection EOF ;
    public final EObject entryRuleViewpointConnection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleViewpointConnection = null;


        try {
            // InternalNgt.g:665:60: (iv_ruleViewpointConnection= ruleViewpointConnection EOF )
            // InternalNgt.g:666:2: iv_ruleViewpointConnection= ruleViewpointConnection EOF
            {
             newCompositeNode(grammarAccess.getViewpointConnectionRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleViewpointConnection=ruleViewpointConnection();

            state._fsp--;

             current =iv_ruleViewpointConnection; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleViewpointConnection"


    // $ANTLR start "ruleViewpointConnection"
    // InternalNgt.g:672:1: ruleViewpointConnection returns [EObject current=null] : ( ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency | lv_connector_0_3= ruleInheritance ) ) ) ( (lv_target_1_0= ruleTestNode ) ) ) ;
    public final EObject ruleViewpointConnection() throws RecognitionException {
        EObject current = null;

        EObject lv_connector_0_1 = null;

        EObject lv_connector_0_2 = null;

        EObject lv_connector_0_3 = null;

        EObject lv_target_1_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:678:2: ( ( ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency | lv_connector_0_3= ruleInheritance ) ) ) ( (lv_target_1_0= ruleTestNode ) ) ) )
            // InternalNgt.g:679:2: ( ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency | lv_connector_0_3= ruleInheritance ) ) ) ( (lv_target_1_0= ruleTestNode ) ) )
            {
            // InternalNgt.g:679:2: ( ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency | lv_connector_0_3= ruleInheritance ) ) ) ( (lv_target_1_0= ruleTestNode ) ) )
            // InternalNgt.g:680:3: ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency | lv_connector_0_3= ruleInheritance ) ) ) ( (lv_target_1_0= ruleTestNode ) )
            {
            // InternalNgt.g:680:3: ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency | lv_connector_0_3= ruleInheritance ) ) )
            // InternalNgt.g:681:4: ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency | lv_connector_0_3= ruleInheritance ) )
            {
            // InternalNgt.g:681:4: ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency | lv_connector_0_3= ruleInheritance ) )
            // InternalNgt.g:682:5: (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency | lv_connector_0_3= ruleInheritance )
            {
            // InternalNgt.g:682:5: (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency | lv_connector_0_3= ruleInheritance )
            int alt14=3;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==16) ) {
                switch ( input.LA(2) ) {
                case 19:
                    {
                    int LA14_2 = input.LA(3);

                    if ( (LA14_2==RULE_STRING) ) {
                        int LA14_6 = input.LA(4);

                        if ( (LA14_6==20) ) {
                            switch ( input.LA(5) ) {
                            case 18:
                                {
                                alt14=2;
                                }
                                break;
                            case 17:
                                {
                                alt14=3;
                                }
                                break;
                            case 16:
                                {
                                alt14=1;
                                }
                                break;
                            default:
                                NoViableAltException nvae =
                                    new NoViableAltException("", 14, 7, input);

                                throw nvae;
                            }

                        }
                        else {
                            NoViableAltException nvae =
                                new NoViableAltException("", 14, 6, input);

                            throw nvae;
                        }
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 14, 2, input);

                        throw nvae;
                    }
                    }
                    break;
                case 18:
                    {
                    alt14=2;
                    }
                    break;
                case 17:
                    {
                    alt14=3;
                    }
                    break;
                case 16:
                    {
                    alt14=1;
                    }
                    break;
                default:
                    NoViableAltException nvae =
                        new NoViableAltException("", 14, 1, input);

                    throw nvae;
                }

            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalNgt.g:683:6: lv_connector_0_1= ruleRelation
                    {

                    						newCompositeNode(grammarAccess.getViewpointConnectionAccess().getConnectorRelationParserRuleCall_0_0_0());
                    					
                    pushFollow(FOLLOW_20);
                    lv_connector_0_1=ruleRelation();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getViewpointConnectionRule());
                    						}
                    						set(
                    							current,
                    							"connector",
                    							lv_connector_0_1,
                    							"org.opentestmodeling.vstep.Ngt.Relation");
                    						afterParserOrEnumRuleCall();
                    					

                    }
                    break;
                case 2 :
                    // InternalNgt.g:699:6: lv_connector_0_2= ruleDependency
                    {

                    						newCompositeNode(grammarAccess.getViewpointConnectionAccess().getConnectorDependencyParserRuleCall_0_0_1());
                    					
                    pushFollow(FOLLOW_20);
                    lv_connector_0_2=ruleDependency();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getViewpointConnectionRule());
                    						}
                    						set(
                    							current,
                    							"connector",
                    							lv_connector_0_2,
                    							"org.opentestmodeling.vstep.Ngt.Dependency");
                    						afterParserOrEnumRuleCall();
                    					

                    }
                    break;
                case 3 :
                    // InternalNgt.g:715:6: lv_connector_0_3= ruleInheritance
                    {

                    						newCompositeNode(grammarAccess.getViewpointConnectionAccess().getConnectorInheritanceParserRuleCall_0_0_2());
                    					
                    pushFollow(FOLLOW_20);
                    lv_connector_0_3=ruleInheritance();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getViewpointConnectionRule());
                    						}
                    						set(
                    							current,
                    							"connector",
                    							lv_connector_0_3,
                    							"org.opentestmodeling.vstep.Ngt.Inheritance");
                    						afterParserOrEnumRuleCall();
                    					

                    }
                    break;

            }


            }


            }

            // InternalNgt.g:733:3: ( (lv_target_1_0= ruleTestNode ) )
            // InternalNgt.g:734:4: (lv_target_1_0= ruleTestNode )
            {
            // InternalNgt.g:734:4: (lv_target_1_0= ruleTestNode )
            // InternalNgt.g:735:5: lv_target_1_0= ruleTestNode
            {

            					newCompositeNode(grammarAccess.getViewpointConnectionAccess().getTargetTestNodeParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_2);
            lv_target_1_0=ruleTestNode();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getViewpointConnectionRule());
            					}
            					set(
            						current,
            						"target",
            						lv_target_1_0,
            						"org.opentestmodeling.vstep.Ngt.TestNode");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleViewpointConnection"


    // $ANTLR start "entryRuleStereotype"
    // InternalNgt.g:756:1: entryRuleStereotype returns [EObject current=null] : iv_ruleStereotype= ruleStereotype EOF ;
    public final EObject entryRuleStereotype() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStereotype = null;


        try {
            // InternalNgt.g:756:51: (iv_ruleStereotype= ruleStereotype EOF )
            // InternalNgt.g:757:2: iv_ruleStereotype= ruleStereotype EOF
            {
             newCompositeNode(grammarAccess.getStereotypeRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleStereotype=ruleStereotype();

            state._fsp--;

             current =iv_ruleStereotype; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStereotype"


    // $ANTLR start "ruleStereotype"
    // InternalNgt.g:763:1: ruleStereotype returns [EObject current=null] : (otherlv_0= '<<' ( (lv_name_1_0= RULE_STRING ) ) otherlv_2= '>>' ) ;
    public final EObject ruleStereotype() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;


        	enterRule();

        try {
            // InternalNgt.g:769:2: ( (otherlv_0= '<<' ( (lv_name_1_0= RULE_STRING ) ) otherlv_2= '>>' ) )
            // InternalNgt.g:770:2: (otherlv_0= '<<' ( (lv_name_1_0= RULE_STRING ) ) otherlv_2= '>>' )
            {
            // InternalNgt.g:770:2: (otherlv_0= '<<' ( (lv_name_1_0= RULE_STRING ) ) otherlv_2= '>>' )
            // InternalNgt.g:771:3: otherlv_0= '<<' ( (lv_name_1_0= RULE_STRING ) ) otherlv_2= '>>'
            {
            otherlv_0=(Token)match(input,19,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getStereotypeAccess().getLessThanSignLessThanSignKeyword_0());
            		
            // InternalNgt.g:775:3: ( (lv_name_1_0= RULE_STRING ) )
            // InternalNgt.g:776:4: (lv_name_1_0= RULE_STRING )
            {
            // InternalNgt.g:776:4: (lv_name_1_0= RULE_STRING )
            // InternalNgt.g:777:5: lv_name_1_0= RULE_STRING
            {
            lv_name_1_0=(Token)match(input,RULE_STRING,FOLLOW_21); 

            					newLeafNode(lv_name_1_0, grammarAccess.getStereotypeAccess().getNameSTRINGTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getStereotypeRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.eclipse.xtext.common.Terminals.STRING");
            				

            }


            }

            otherlv_2=(Token)match(input,20,FOLLOW_2); 

            			newLeafNode(otherlv_2, grammarAccess.getStereotypeAccess().getGreaterThanSignGreaterThanSignKeyword_2());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStereotype"


    // $ANTLR start "entryRuleStringList"
    // InternalNgt.g:801:1: entryRuleStringList returns [EObject current=null] : iv_ruleStringList= ruleStringList EOF ;
    public final EObject entryRuleStringList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringList = null;


        try {
            // InternalNgt.g:801:51: (iv_ruleStringList= ruleStringList EOF )
            // InternalNgt.g:802:2: iv_ruleStringList= ruleStringList EOF
            {
             newCompositeNode(grammarAccess.getStringListRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleStringList=ruleStringList();

            state._fsp--;

             current =iv_ruleStringList; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringList"


    // $ANTLR start "ruleStringList"
    // InternalNgt.g:808:1: ruleStringList returns [EObject current=null] : (otherlv_0= '[' ( ( (lv_list_1_0= ruleSTRING_OR_NUMBER ) ) (otherlv_2= ',' ( (lv_list_3_0= ruleSTRING_OR_NUMBER ) ) ) ) otherlv_4= ']' ) ;
    public final EObject ruleStringList() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_list_1_0 = null;

        AntlrDatatypeRuleToken lv_list_3_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:814:2: ( (otherlv_0= '[' ( ( (lv_list_1_0= ruleSTRING_OR_NUMBER ) ) (otherlv_2= ',' ( (lv_list_3_0= ruleSTRING_OR_NUMBER ) ) ) ) otherlv_4= ']' ) )
            // InternalNgt.g:815:2: (otherlv_0= '[' ( ( (lv_list_1_0= ruleSTRING_OR_NUMBER ) ) (otherlv_2= ',' ( (lv_list_3_0= ruleSTRING_OR_NUMBER ) ) ) ) otherlv_4= ']' )
            {
            // InternalNgt.g:815:2: (otherlv_0= '[' ( ( (lv_list_1_0= ruleSTRING_OR_NUMBER ) ) (otherlv_2= ',' ( (lv_list_3_0= ruleSTRING_OR_NUMBER ) ) ) ) otherlv_4= ']' )
            // InternalNgt.g:816:3: otherlv_0= '[' ( ( (lv_list_1_0= ruleSTRING_OR_NUMBER ) ) (otherlv_2= ',' ( (lv_list_3_0= ruleSTRING_OR_NUMBER ) ) ) ) otherlv_4= ']'
            {
            otherlv_0=(Token)match(input,13,FOLLOW_22); 

            			newLeafNode(otherlv_0, grammarAccess.getStringListAccess().getLeftSquareBracketKeyword_0());
            		
            // InternalNgt.g:820:3: ( ( (lv_list_1_0= ruleSTRING_OR_NUMBER ) ) (otherlv_2= ',' ( (lv_list_3_0= ruleSTRING_OR_NUMBER ) ) ) )
            // InternalNgt.g:821:4: ( (lv_list_1_0= ruleSTRING_OR_NUMBER ) ) (otherlv_2= ',' ( (lv_list_3_0= ruleSTRING_OR_NUMBER ) ) )
            {
            // InternalNgt.g:821:4: ( (lv_list_1_0= ruleSTRING_OR_NUMBER ) )
            // InternalNgt.g:822:5: (lv_list_1_0= ruleSTRING_OR_NUMBER )
            {
            // InternalNgt.g:822:5: (lv_list_1_0= ruleSTRING_OR_NUMBER )
            // InternalNgt.g:823:6: lv_list_1_0= ruleSTRING_OR_NUMBER
            {

            						newCompositeNode(grammarAccess.getStringListAccess().getListSTRING_OR_NUMBERParserRuleCall_1_0_0());
            					
            pushFollow(FOLLOW_7);
            lv_list_1_0=ruleSTRING_OR_NUMBER();

            state._fsp--;


            						if (current==null) {
            							current = createModelElementForParent(grammarAccess.getStringListRule());
            						}
            						add(
            							current,
            							"list",
            							lv_list_1_0,
            							"org.opentestmodeling.vstep.Ngt.STRING_OR_NUMBER");
            						afterParserOrEnumRuleCall();
            					

            }


            }

            // InternalNgt.g:840:4: (otherlv_2= ',' ( (lv_list_3_0= ruleSTRING_OR_NUMBER ) ) )
            // InternalNgt.g:841:5: otherlv_2= ',' ( (lv_list_3_0= ruleSTRING_OR_NUMBER ) )
            {
            otherlv_2=(Token)match(input,14,FOLLOW_22); 

            					newLeafNode(otherlv_2, grammarAccess.getStringListAccess().getCommaKeyword_1_1_0());
            				
            // InternalNgt.g:845:5: ( (lv_list_3_0= ruleSTRING_OR_NUMBER ) )
            // InternalNgt.g:846:6: (lv_list_3_0= ruleSTRING_OR_NUMBER )
            {
            // InternalNgt.g:846:6: (lv_list_3_0= ruleSTRING_OR_NUMBER )
            // InternalNgt.g:847:7: lv_list_3_0= ruleSTRING_OR_NUMBER
            {

            							newCompositeNode(grammarAccess.getStringListAccess().getListSTRING_OR_NUMBERParserRuleCall_1_1_1_0());
            						
            pushFollow(FOLLOW_11);
            lv_list_3_0=ruleSTRING_OR_NUMBER();

            state._fsp--;


            							if (current==null) {
            								current = createModelElementForParent(grammarAccess.getStringListRule());
            							}
            							add(
            								current,
            								"list",
            								lv_list_3_0,
            								"org.opentestmodeling.vstep.Ngt.STRING_OR_NUMBER");
            							afterParserOrEnumRuleCall();
            						

            }


            }


            }


            }

            otherlv_4=(Token)match(input,15,FOLLOW_2); 

            			newLeafNode(otherlv_4, grammarAccess.getStringListAccess().getRightSquareBracketKeyword_2());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringList"


    // $ANTLR start "entryRuleQualityRisk"
    // InternalNgt.g:874:1: entryRuleQualityRisk returns [String current=null] : iv_ruleQualityRisk= ruleQualityRisk EOF ;
    public final String entryRuleQualityRisk() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleQualityRisk = null;


        try {
            // InternalNgt.g:874:51: (iv_ruleQualityRisk= ruleQualityRisk EOF )
            // InternalNgt.g:875:2: iv_ruleQualityRisk= ruleQualityRisk EOF
            {
             newCompositeNode(grammarAccess.getQualityRiskRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleQualityRisk=ruleQualityRisk();

            state._fsp--;

             current =iv_ruleQualityRisk.getText(); 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQualityRisk"


    // $ANTLR start "ruleQualityRisk"
    // InternalNgt.g:881:1: ruleQualityRisk returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'importance=' this_INT_1= RULE_INT kw= ',' kw= 'severity=' this_INT_4= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleQualityRisk() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;
        Token this_INT_4=null;


        	enterRule();

        try {
            // InternalNgt.g:887:2: ( (kw= 'importance=' this_INT_1= RULE_INT kw= ',' kw= 'severity=' this_INT_4= RULE_INT ) )
            // InternalNgt.g:888:2: (kw= 'importance=' this_INT_1= RULE_INT kw= ',' kw= 'severity=' this_INT_4= RULE_INT )
            {
            // InternalNgt.g:888:2: (kw= 'importance=' this_INT_1= RULE_INT kw= ',' kw= 'severity=' this_INT_4= RULE_INT )
            // InternalNgt.g:889:3: kw= 'importance=' this_INT_1= RULE_INT kw= ',' kw= 'severity=' this_INT_4= RULE_INT
            {
            kw=(Token)match(input,21,FOLLOW_23); 

            			current.merge(kw);
            			newLeafNode(kw, grammarAccess.getQualityRiskAccess().getImportanceKeyword_0());
            		
            this_INT_1=(Token)match(input,RULE_INT,FOLLOW_7); 

            			current.merge(this_INT_1);
            		

            			newLeafNode(this_INT_1, grammarAccess.getQualityRiskAccess().getINTTerminalRuleCall_1());
            		
            kw=(Token)match(input,14,FOLLOW_24); 

            			current.merge(kw);
            			newLeafNode(kw, grammarAccess.getQualityRiskAccess().getCommaKeyword_2());
            		
            kw=(Token)match(input,22,FOLLOW_23); 

            			current.merge(kw);
            			newLeafNode(kw, grammarAccess.getQualityRiskAccess().getSeverityKeyword_3());
            		
            this_INT_4=(Token)match(input,RULE_INT,FOLLOW_2); 

            			current.merge(this_INT_4);
            		

            			newLeafNode(this_INT_4, grammarAccess.getQualityRiskAccess().getINTTerminalRuleCall_4());
            		

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQualityRisk"


    // $ANTLR start "entryRuleTestContainer"
    // InternalNgt.g:922:1: entryRuleTestContainer returns [EObject current=null] : iv_ruleTestContainer= ruleTestContainer EOF ;
    public final EObject entryRuleTestContainer() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestContainer = null;


        try {
            // InternalNgt.g:922:54: (iv_ruleTestContainer= ruleTestContainer EOF )
            // InternalNgt.g:923:2: iv_ruleTestContainer= ruleTestContainer EOF
            {
             newCompositeNode(grammarAccess.getTestContainerRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleTestContainer=ruleTestContainer();

            state._fsp--;

             current =iv_ruleTestContainer; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestContainer"


    // $ANTLR start "ruleTestContainer"
    // InternalNgt.g:929:1: ruleTestContainer returns [EObject current=null] : (otherlv_0= 'container' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= '{' ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )* otherlv_4= '}' )? ) ;
    public final EObject ruleTestContainer() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_elements_3_1 = null;

        EObject lv_elements_3_2 = null;



        	enterRule();

        try {
            // InternalNgt.g:935:2: ( (otherlv_0= 'container' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= '{' ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )* otherlv_4= '}' )? ) )
            // InternalNgt.g:936:2: (otherlv_0= 'container' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= '{' ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )* otherlv_4= '}' )? )
            {
            // InternalNgt.g:936:2: (otherlv_0= 'container' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= '{' ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )* otherlv_4= '}' )? )
            // InternalNgt.g:937:3: otherlv_0= 'container' ( (lv_name_1_0= RULE_STRING ) ) (otherlv_2= '{' ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )* otherlv_4= '}' )?
            {
            otherlv_0=(Token)match(input,23,FOLLOW_4); 

            			newLeafNode(otherlv_0, grammarAccess.getTestContainerAccess().getContainerKeyword_0());
            		
            // InternalNgt.g:941:3: ( (lv_name_1_0= RULE_STRING ) )
            // InternalNgt.g:942:4: (lv_name_1_0= RULE_STRING )
            {
            // InternalNgt.g:942:4: (lv_name_1_0= RULE_STRING )
            // InternalNgt.g:943:5: lv_name_1_0= RULE_STRING
            {
            lv_name_1_0=(Token)match(input,RULE_STRING,FOLLOW_25); 

            					newLeafNode(lv_name_1_0, grammarAccess.getTestContainerAccess().getNameSTRINGTerminalRuleCall_1_0());
            				

            					if (current==null) {
            						current = createModelElement(grammarAccess.getTestContainerRule());
            					}
            					setWithLastConsumed(
            						current,
            						"name",
            						lv_name_1_0,
            						"org.eclipse.xtext.common.Terminals.STRING");
            				

            }


            }

            // InternalNgt.g:959:3: (otherlv_2= '{' ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )* otherlv_4= '}' )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==24) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalNgt.g:960:4: otherlv_2= '{' ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )* otherlv_4= '}'
                    {
                    otherlv_2=(Token)match(input,24,FOLLOW_26); 

                    				newLeafNode(otherlv_2, grammarAccess.getTestContainerAccess().getLeftCurlyBracketKeyword_2_0());
                    			
                    // InternalNgt.g:964:4: ( ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) ) )*
                    loop16:
                    do {
                        int alt16=2;
                        int LA16_0 = input.LA(1);

                        if ( (LA16_0==11||LA16_0==13||LA16_0==23) ) {
                            alt16=1;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // InternalNgt.g:965:5: ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) )
                    	    {
                    	    // InternalNgt.g:965:5: ( (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode ) )
                    	    // InternalNgt.g:966:6: (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode )
                    	    {
                    	    // InternalNgt.g:966:6: (lv_elements_3_1= ruleTestContainer | lv_elements_3_2= ruleTestNode )
                    	    int alt15=2;
                    	    int LA15_0 = input.LA(1);

                    	    if ( (LA15_0==23) ) {
                    	        alt15=1;
                    	    }
                    	    else if ( (LA15_0==11||LA15_0==13) ) {
                    	        alt15=2;
                    	    }
                    	    else {
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 15, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt15) {
                    	        case 1 :
                    	            // InternalNgt.g:967:7: lv_elements_3_1= ruleTestContainer
                    	            {

                    	            							newCompositeNode(grammarAccess.getTestContainerAccess().getElementsTestContainerParserRuleCall_2_1_0_0());
                    	            						
                    	            pushFollow(FOLLOW_26);
                    	            lv_elements_3_1=ruleTestContainer();

                    	            state._fsp--;


                    	            							if (current==null) {
                    	            								current = createModelElementForParent(grammarAccess.getTestContainerRule());
                    	            							}
                    	            							add(
                    	            								current,
                    	            								"elements",
                    	            								lv_elements_3_1,
                    	            								"org.opentestmodeling.vstep.Ngt.TestContainer");
                    	            							afterParserOrEnumRuleCall();
                    	            						

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalNgt.g:983:7: lv_elements_3_2= ruleTestNode
                    	            {

                    	            							newCompositeNode(grammarAccess.getTestContainerAccess().getElementsTestNodeParserRuleCall_2_1_0_1());
                    	            						
                    	            pushFollow(FOLLOW_26);
                    	            lv_elements_3_2=ruleTestNode();

                    	            state._fsp--;


                    	            							if (current==null) {
                    	            								current = createModelElementForParent(grammarAccess.getTestContainerRule());
                    	            							}
                    	            							add(
                    	            								current,
                    	            								"elements",
                    	            								lv_elements_3_2,
                    	            								"org.opentestmodeling.vstep.Ngt.TestNode");
                    	            							afterParserOrEnumRuleCall();
                    	            						

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop16;
                        }
                    } while (true);

                    otherlv_4=(Token)match(input,25,FOLLOW_2); 

                    				newLeafNode(otherlv_4, grammarAccess.getTestContainerAccess().getRightCurlyBracketKeyword_2_2());
                    			

                    }
                    break;

            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestContainer"


    // $ANTLR start "entryRuleContainerConnection"
    // InternalNgt.g:1010:1: entryRuleContainerConnection returns [EObject current=null] : iv_ruleContainerConnection= ruleContainerConnection EOF ;
    public final EObject entryRuleContainerConnection() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleContainerConnection = null;


        try {
            // InternalNgt.g:1010:60: (iv_ruleContainerConnection= ruleContainerConnection EOF )
            // InternalNgt.g:1011:2: iv_ruleContainerConnection= ruleContainerConnection EOF
            {
             newCompositeNode(grammarAccess.getContainerConnectionRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleContainerConnection=ruleContainerConnection();

            state._fsp--;

             current =iv_ruleContainerConnection; 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleContainerConnection"


    // $ANTLR start "ruleContainerConnection"
    // InternalNgt.g:1017:1: ruleContainerConnection returns [EObject current=null] : ( ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) ) ) ( (lv_target_1_0= ruleTestContainer ) ) ) ;
    public final EObject ruleContainerConnection() throws RecognitionException {
        EObject current = null;

        EObject lv_connector_0_1 = null;

        EObject lv_connector_0_2 = null;

        EObject lv_target_1_0 = null;



        	enterRule();

        try {
            // InternalNgt.g:1023:2: ( ( ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) ) ) ( (lv_target_1_0= ruleTestContainer ) ) ) )
            // InternalNgt.g:1024:2: ( ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) ) ) ( (lv_target_1_0= ruleTestContainer ) ) )
            {
            // InternalNgt.g:1024:2: ( ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) ) ) ( (lv_target_1_0= ruleTestContainer ) ) )
            // InternalNgt.g:1025:3: ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) ) ) ( (lv_target_1_0= ruleTestContainer ) )
            {
            // InternalNgt.g:1025:3: ( ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) ) )
            // InternalNgt.g:1026:4: ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) )
            {
            // InternalNgt.g:1026:4: ( (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency ) )
            // InternalNgt.g:1027:5: (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency )
            {
            // InternalNgt.g:1027:5: (lv_connector_0_1= ruleRelation | lv_connector_0_2= ruleDependency )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==16) ) {
                switch ( input.LA(2) ) {
                case 19:
                    {
                    int LA18_2 = input.LA(3);

                    if ( (LA18_2==RULE_STRING) ) {
                        int LA18_5 = input.LA(4);

                        if ( (LA18_5==20) ) {
                            int LA18_6 = input.LA(5);

                            if ( (LA18_6==18) ) {
                                alt18=2;
                            }
                            else if ( (LA18_6==16) ) {
                                alt18=1;
                            }
                            else {
                                NoViableAltException nvae =
                                    new NoViableAltException("", 18, 6, input);

                                throw nvae;
                            }
                        }
                        else {
                            NoViableAltException nvae =
                                new NoViableAltException("", 18, 5, input);

                            throw nvae;
                        }
                    }
                    else {
                        NoViableAltException nvae =
                            new NoViableAltException("", 18, 2, input);

                        throw nvae;
                    }
                    }
                    break;
                case 16:
                    {
                    alt18=1;
                    }
                    break;
                case 18:
                    {
                    alt18=2;
                    }
                    break;
                default:
                    NoViableAltException nvae =
                        new NoViableAltException("", 18, 1, input);

                    throw nvae;
                }

            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalNgt.g:1028:6: lv_connector_0_1= ruleRelation
                    {

                    						newCompositeNode(grammarAccess.getContainerConnectionAccess().getConnectorRelationParserRuleCall_0_0_0());
                    					
                    pushFollow(FOLLOW_27);
                    lv_connector_0_1=ruleRelation();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getContainerConnectionRule());
                    						}
                    						set(
                    							current,
                    							"connector",
                    							lv_connector_0_1,
                    							"org.opentestmodeling.vstep.Ngt.Relation");
                    						afterParserOrEnumRuleCall();
                    					

                    }
                    break;
                case 2 :
                    // InternalNgt.g:1044:6: lv_connector_0_2= ruleDependency
                    {

                    						newCompositeNode(grammarAccess.getContainerConnectionAccess().getConnectorDependencyParserRuleCall_0_0_1());
                    					
                    pushFollow(FOLLOW_27);
                    lv_connector_0_2=ruleDependency();

                    state._fsp--;


                    						if (current==null) {
                    							current = createModelElementForParent(grammarAccess.getContainerConnectionRule());
                    						}
                    						set(
                    							current,
                    							"connector",
                    							lv_connector_0_2,
                    							"org.opentestmodeling.vstep.Ngt.Dependency");
                    						afterParserOrEnumRuleCall();
                    					

                    }
                    break;

            }


            }


            }

            // InternalNgt.g:1062:3: ( (lv_target_1_0= ruleTestContainer ) )
            // InternalNgt.g:1063:4: (lv_target_1_0= ruleTestContainer )
            {
            // InternalNgt.g:1063:4: (lv_target_1_0= ruleTestContainer )
            // InternalNgt.g:1064:5: lv_target_1_0= ruleTestContainer
            {

            					newCompositeNode(grammarAccess.getContainerConnectionAccess().getTargetTestContainerParserRuleCall_1_0());
            				
            pushFollow(FOLLOW_2);
            lv_target_1_0=ruleTestContainer();

            state._fsp--;


            					if (current==null) {
            						current = createModelElementForParent(grammarAccess.getContainerConnectionRule());
            					}
            					set(
            						current,
            						"target",
            						lv_target_1_0,
            						"org.opentestmodeling.vstep.Ngt.TestContainer");
            					afterParserOrEnumRuleCall();
            				

            }


            }


            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleContainerConnection"


    // $ANTLR start "entryRuleSTRING_OR_NUMBER"
    // InternalNgt.g:1085:1: entryRuleSTRING_OR_NUMBER returns [String current=null] : iv_ruleSTRING_OR_NUMBER= ruleSTRING_OR_NUMBER EOF ;
    public final String entryRuleSTRING_OR_NUMBER() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleSTRING_OR_NUMBER = null;


        try {
            // InternalNgt.g:1085:56: (iv_ruleSTRING_OR_NUMBER= ruleSTRING_OR_NUMBER EOF )
            // InternalNgt.g:1086:2: iv_ruleSTRING_OR_NUMBER= ruleSTRING_OR_NUMBER EOF
            {
             newCompositeNode(grammarAccess.getSTRING_OR_NUMBERRule()); 
            pushFollow(FOLLOW_1);
            iv_ruleSTRING_OR_NUMBER=ruleSTRING_OR_NUMBER();

            state._fsp--;

             current =iv_ruleSTRING_OR_NUMBER.getText(); 
            match(input,EOF,FOLLOW_2); 

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSTRING_OR_NUMBER"


    // $ANTLR start "ruleSTRING_OR_NUMBER"
    // InternalNgt.g:1092:1: ruleSTRING_OR_NUMBER returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleSTRING_OR_NUMBER() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_INT_1=null;


        	enterRule();

        try {
            // InternalNgt.g:1098:2: ( (this_STRING_0= RULE_STRING | this_INT_1= RULE_INT ) )
            // InternalNgt.g:1099:2: (this_STRING_0= RULE_STRING | this_INT_1= RULE_INT )
            {
            // InternalNgt.g:1099:2: (this_STRING_0= RULE_STRING | this_INT_1= RULE_INT )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_STRING) ) {
                alt19=1;
            }
            else if ( (LA19_0==RULE_INT) ) {
                alt19=2;
            }
            else {
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalNgt.g:1100:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FOLLOW_2); 

                    			current.merge(this_STRING_0);
                    		

                    			newLeafNode(this_STRING_0, grammarAccess.getSTRING_OR_NUMBERAccess().getSTRINGTerminalRuleCall_0());
                    		

                    }
                    break;
                case 2 :
                    // InternalNgt.g:1108:3: this_INT_1= RULE_INT
                    {
                    this_INT_1=(Token)match(input,RULE_INT,FOLLOW_2); 

                    			current.merge(this_INT_1);
                    		

                    			newLeafNode(this_INT_1, grammarAccess.getSTRING_OR_NUMBERAccess().getINTTerminalRuleCall_1());
                    		

                    }
                    break;

            }


            }


            	leaveRule();

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSTRING_OR_NUMBER"

    // Delegated rules


    protected DFA13 dfa13 = new DFA13(this);
    static final String dfa_1s = "\12\uffff";
    static final String dfa_2s = "\2\20\1\4\1\uffff\1\13\1\24\1\4\1\20\1\14\1\uffff";
    static final String dfa_3s = "\1\20\1\23\1\4\1\uffff\1\15\1\24\1\4\1\22\1\14\1\uffff";
    static final String dfa_4s = "\3\uffff\1\2\5\uffff\1\1";
    static final String dfa_5s = "\12\uffff}>";
    static final String[] dfa_6s = {
            "\1\1",
            "\1\3\1\4\1\3\1\2",
            "\1\5",
            "",
            "\1\6\1\uffff\1\3",
            "\1\7",
            "\1\10",
            "\1\3\1\4\1\3",
            "\1\11",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA13 extends DFA {

        public DFA13(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 13;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "586:2: (this_TargetConnection_0= ruleTargetConnection | this_ViewpointConnection_1= ruleViewpointConnection )";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000802802L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000080002L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000006000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000204000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000008010L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000008000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x00000000000A0000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000090000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x00000000000C0000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000010002L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000002800L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000100000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000400000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000002802800L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000802800L});

}